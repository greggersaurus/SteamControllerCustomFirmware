// Data obtained from simulation run of vcf_wired_controller_d0g_57bf5c10.bin using pinkySim:


 Entry Num, File Offset,   Raw Data,                                                                                                                 Decoded Raw Data, Current PC,    Next PC,         SP,         LR,       XPSR,    PRIMASK,    CONTROL,               Register  0,               Register  1,               Register  2,               Register  3,               Register  4,               Register  5,               Register  6,               Register  7,               Register  8,               Register  9,               Register  10,               Register  11,               Register  12, 
         0,  0x00000244, 0x00000fe1,                                                                 alignedMemRead: 128 kB on-chip flash (0x00000244 --> 0x00000fe1), 0x000000d4, 0x000000d6, 0x10001bc0, 0x00000000, 0x01000000, 0x00000000, 0x00000000, 0x00000001 (           1), 0x10001c1c (   268442652), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
         1,  0x000000d4,     0x485b,                                                            ldrLiteral: Set Reg 0 with value 0x00000fe1 (from address 0x00000244), 0x000000d4, 0x000000d6, 0x10001bc0, 0x00000000, 0x01000000, 0x00000000, 0x00000000, 0x00000fe1 (        4065), 0x10001c1c (   268442652), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
         2,  0x000000d6,     0x4780,                                                                                  blx: Set PC to 0x00000fe1. Set LR to 0x000000d8, 0x000000d6, 0x00000fe0, 0x10001bc0, 0x000000d9, 0x01000000, 0x00000000, 0x00000000, 0x00000fe1 (        4065), 0x10001c1c (   268442652), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
         3,  0x10001bb0, 0x00000000,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001bb0 <-- 0x00000000), 0x00000fe0, 0x00000fe2, 0x10001bc0, 0x000000d9, 0x01000000, 0x00000000, 0x00000000, 0x00000fe1 (        4065), 0x10001c1c (   268442652), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
         4,  0x10001bb4, 0x00000000,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001bb4 <-- 0x00000000), 0x00000fe0, 0x00000fe2, 0x10001bc0, 0x000000d9, 0x01000000, 0x00000000, 0x00000000, 0x00000fe1 (        4065), 0x10001c1c (   268442652), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
         5,  0x10001bb8, 0x00000000,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001bb8 <-- 0x00000000), 0x00000fe0, 0x00000fe2, 0x10001bc0, 0x000000d9, 0x01000000, 0x00000000, 0x00000000, 0x00000fe1 (        4065), 0x10001c1c (   268442652), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
         6,  0x10001bbc, 0x000000d9,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001bbc <-- 0x000000d9), 0x00000fe0, 0x00000fe2, 0x10001bc0, 0x000000d9, 0x01000000, 0x00000000, 0x00000000, 0x00000fe1 (        4065), 0x10001c1c (   268442652), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
         7,  0x00000fe0,     0xb538,                                                                                                                             push, 0x00000fe0, 0x00000fe2, 0x10001bb0, 0x000000d9, 0x01000000, 0x00000000, 0x00000000, 0x00000fe1 (        4065), 0x10001c1c (   268442652), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 

volatile uint32_t* reg = NULL;
uint32_t val = 0;


// CSV ENTRY NUM 8 - 23:

// Power Configuration Register
reg = 0x40048238;
// Read current value
val = *reg;
// Clear reserved bit that must stay cleared
val &= 0x000005ff;
// Make sure crystal oscillator is powered
val &= ~(0x00000020);
// Reserved bits that must always be set
val |= 0xe800;
*reg = val;


// CSV ENTRY NUM 24 - 45085:
// Some sort of delay required after last system control register mod?
for (uint32_t cnt = 0; cnt < 0x1600; cnt++)
{
	nop;
}


// CSV ENTRY NUM 45086 - 45099:

// Select Crystal Oscillator (SYSOSC)
reg = 0x40048040;
*reg = 1;

// Enable system PLL clock source update
reg = 0x40048044;
*reg = 0;
*reg = 1;


// CSV ENTRY NUM 45100 - 45114:

// Power Configuration Register
reg = 0x40048238;
// Read current value
val = *reg;
// Clear reserved bit that must stay cleared
val &= 0x5ff;
// Make sure system PLL is powered down
val |= 0x80;
// Reserved bits that must always be set
val |= 0xe800;
*reg = val;


// CSV ENTRY NUM 45115 - 45121:

// System PLL control register
reg = 0x40048008;
// Division ratio = 2 x 4. Feedback divider value = 3 + 1.
*reg = 0x23;


// CSV ENTRY NUM 45122 - 45136:

// Power configuration register
reg = 0x40048238;
val = *reg;
// Clear reserved bit that must stay cleared
val &= 0x5ff;
// Make sure system PLL powered
val &= ~0x80;
// Reserved bits that must always be set
val |= 0xe800;
*reg = val;


// CSV ENTRY NUM 45137 - 45143:

// System PLL status register
reg = 0x4004800c;
// Wait until PLL is locked
while(((*reg) & 1) == 0);


// CSV ENTRY NUM 45144 - 45149:

// System clock divider register
reg = 0x40048078;
// Set system AHB clock divider to 1.
*reg = 1;


// CSV ENTRY NUM 45150 - 45159:

// Flash configuration register
reg = 0x4003c010;
val = *reg;
// Bits 31:2 must be written back exactly as read
val &= 0xFFFFFFC0;
// Set flash access time to 3 system clocks (for system clock up to 50 MHz)
val |=  2;
*reg = val;


// CSV ENTRY NUM 45160 - 45171:

// Main clock source select register
reg = 0x40048070;
// Select PLL output
*reg = 3;

// Main clock source update enable register
reg = 0x40048074;
// No change
*reg = 0;
// Update clock source
*reg = 1;


// CSV ENTRY NUM 45172 - 45184:

// USB PLL clock source select register
reg = 0x40048048;
// Select system oscillator
*reg = 1;

// USB PLL clock source update enable register
reg = 0x4004804c;
// No change
*reg = 0;
// Update clock source.
*reg = 1;


// CSV ENTRY NUM 45185 - 45187:

// USB PLL control register
reg = 0x40048010;
// Division ration is 2 x 4. Feedback divider value is 3 + 1.
*reg = 0x23;


// CSV ENTRY NUM 45188 - 45204:

// Power Configuration Register
reg = 0x40048238;
val = *reg;
// Clear reserved bit that must stay cleared
val &= 0x5ff;
// Set USB PLL and USB transceiver to powered
val &= ~0x500;
// Reserved bits that must always be set
val |= 0xe800;
*reg = val;


// CSV ENTRY NUM 45205 - 45211:

// USB PLL status register
reg = 0x40048014;
// Wait for PLL locked
while (((*reg) & 1) == 0);


// CSV ENTRY NUM 45212 - 45221:

// System clock control register
reg = 0x40048080;
val = *reg;
// Enable I/O configuration block
val |= 0x10000;
*reg = val;


// CSV ENTRY NUM 45222 - 45441:

// Section of SRAM0 (0x10000200 - 0x10000260) is getting filled with specific data (not important?)

/*
	0x00000000
	0x00002000
	0x00220209
	0x80000101
	0x00040932
	0x00030100
	0x21090000
	0x01000111
	0x07002122
	0x40038105
	0x00000600
	0x00000000
	0x00000000
	0x00000000
	0x00000000
	0x00000000
	0x00000000
	0x00000000
	0x00000000
	0x00000000
	0x00000000
	0x00000000
	0x00000000
	0x00000000
*/


// CSV ENTRY NUM 45442 - 53680
// Clear a section of SRAM0 from 0x10000264 to 0x10001c1c. 6588 4 byte writes. (Continuation of previous not important?)


// CSV ENTRY NUM 53681 - 53707:
// Fill in tail end of SRAM0 block cleared above (not important?)
     53681,  0x00001548,     0x4770,                                                                                                         bx: Branch to 0x000003c7, 0x00001548, 0x000003c6, 0x10001c20, 0x000003c7, 0x61000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x10001c20 (   268442656), 0x00000000 (           0), 0x0000153d (        5437), 0x0000184c (        6220), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53682,  0x000003c6,     0x3410,                                                                           addImmediateT2: Add Reg 4 (0x0000185c) with 0x00000010, 0x000003c6, 0x000003c8, 0x10001c20, 0x000003c7, 0x01000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x10001c20 (   268442656), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53683,  0x000003c8,     0x42b4,                                                              cmpRegisterT1: Subtract Reg 4 (0x0000185c) minus Reg 6 (0x0000185c), 0x000003c8, 0x000003ca, 0x10001c20, 0x000003c7, 0x61000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x10001c20 (   268442656), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53684,  0x000003ca,     0xd3f7,                                                                                   conditionalBranch: Not branching to 0x000003bc, 0x000003ca, 0x000003cc, 0x10001c20, 0x000003c7, 0x61000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x10001c20 (   268442656), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53685,  0x000003cc, 0xfe7cf7ff,                                                                                bl: Branch to 0x000003d1 (Link Reg is 0x000000c8), 0x000003cc, 0x000000c8, 0x10001c20, 0x000003d1, 0x61000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x10001c20 (   268442656), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53686,  0x000000cc, 0x0000154d,                                                                 alignedMemRead: 128 kB on-chip flash (0x000000cc --> 0x0000154d), 0x000000c8, 0x000000ca, 0x10001c20, 0x000003d1, 0x61000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x10001c20 (   268442656), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53687,  0x000000c8,     0x4800,                                                            ldrLiteral: Set Reg 0 with value 0x0000154d (from address 0x000000cc), 0x000000c8, 0x000000ca, 0x10001c20, 0x000003d1, 0x61000000, 0x00000000, 0x00000000, 0x0000154d (        5453), 0x10001c20 (   268442656), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53688,  0x000000ca,     0x4700,                                                                                                         bx: Branch to 0x0000154d, 0x000000ca, 0x0000154c, 0x10001c20, 0x000003d1, 0x61000000, 0x00000000, 0x00000000, 0x0000154d (        5453), 0x10001c20 (   268442656), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53689,  0x10001c08, 0x00000000,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001c08 <-- 0x00000000), 0x0000154c, 0x0000154e, 0x10001c20, 0x000003d1, 0x61000000, 0x00000000, 0x00000000, 0x0000154d (        5453), 0x10001c20 (   268442656), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53690,  0x10001c0c, 0x0000153d,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001c0c <-- 0x0000153d), 0x0000154c, 0x0000154e, 0x10001c20, 0x000003d1, 0x61000000, 0x00000000, 0x00000000, 0x0000154d (        5453), 0x10001c20 (   268442656), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53691,  0x10001c10, 0x0000185c,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001c10 <-- 0x0000185c), 0x0000154c, 0x0000154e, 0x10001c20, 0x000003d1, 0x61000000, 0x00000000, 0x00000000, 0x0000154d (        5453), 0x10001c20 (   268442656), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53692,  0x10001c14, 0x00000001,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001c14 <-- 0x00000001), 0x0000154c, 0x0000154e, 0x10001c20, 0x000003d1, 0x61000000, 0x00000000, 0x00000000, 0x0000154d (        5453), 0x10001c20 (   268442656), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53693,  0x10001c18, 0x0000185c,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001c18 <-- 0x0000185c), 0x0000154c, 0x0000154e, 0x10001c20, 0x000003d1, 0x61000000, 0x00000000, 0x00000000, 0x0000154d (        5453), 0x10001c20 (   268442656), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53694,  0x10001c1c, 0x000003d1,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001c1c <-- 0x000003d1), 0x0000154c, 0x0000154e, 0x10001c20, 0x000003d1, 0x61000000, 0x00000000, 0x00000000, 0x0000154d (        5453), 0x10001c20 (   268442656), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53695,  0x0000154c,     0xb57c,                                                                                                                             push, 0x0000154c, 0x0000154e, 0x10001c08, 0x000003d1, 0x61000000, 0x00000000, 0x00000000, 0x0000154d (        5453), 0x10001c20 (   268442656), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53696,  0x0000154e, 0xfd3ff7ff,                                                                                bl: Branch to 0x00001553 (Link Reg is 0x00000fd0), 0x0000154e, 0x00000fd0, 0x10001c08, 0x00001553, 0x61000000, 0x00000000, 0x00000000, 0x0000154d (        5453), 0x10001c20 (   268442656), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53697,  0x10001c00, 0x0000185c,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001c00 <-- 0x0000185c), 0x00000fd0, 0x00000fd2, 0x10001c08, 0x00001553, 0x61000000, 0x00000000, 0x00000000, 0x0000154d (        5453), 0x10001c20 (   268442656), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53698,  0x10001c04, 0x00001553,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001c04 <-- 0x00001553), 0x00000fd0, 0x00000fd2, 0x10001c08, 0x00001553, 0x61000000, 0x00000000, 0x00000000, 0x0000154d (        5453), 0x10001c20 (   268442656), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53699,  0x00000fd0,     0xb510,                                                                                                                             push, 0x00000fd0, 0x00000fd2, 0x10001c00, 0x00001553, 0x61000000, 0x00000000, 0x00000000, 0x0000154d (        5453), 0x10001c20 (   268442656), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53700,  0x00000fd2, 0xfa5ff7ff,                                                                                bl: Branch to 0x00000fd7 (Link Reg is 0x00000494), 0x00000fd2, 0x00000494, 0x10001c00, 0x00000fd7, 0x61000000, 0x00000000, 0x00000000, 0x0000154d (        5453), 0x10001c20 (   268442656), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53701,  0x10001bf8, 0x0000185c,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001bf8 <-- 0x0000185c), 0x00000494, 0x00000496, 0x10001c00, 0x00000fd7, 0x61000000, 0x00000000, 0x00000000, 0x0000154d (        5453), 0x10001c20 (   268442656), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53702,  0x10001bfc, 0x00000fd7,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001bfc <-- 0x00000fd7), 0x00000494, 0x00000496, 0x10001c00, 0x00000fd7, 0x61000000, 0x00000000, 0x00000000, 0x0000154d (        5453), 0x10001c20 (   268442656), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53703,  0x00000494,     0xb510,                                                                                                                             push, 0x00000494, 0x00000496, 0x10001bf8, 0x00000fd7, 0x61000000, 0x00000000, 0x00000000, 0x0000154d (        5453), 0x10001c20 (   268442656), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53704,  0x00000496, 0xffdbf7ff,                                                                                bl: Branch to 0x0000049b (Link Reg is 0x00000450), 0x00000496, 0x00000450, 0x10001bf8, 0x0000049b, 0x61000000, 0x00000000, 0x00000000, 0x0000154d (        5453), 0x10001c20 (   268442656), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53705,  0x10001bf0, 0x0000185c,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001bf0 <-- 0x0000185c), 0x00000450, 0x00000452, 0x10001bf8, 0x0000049b, 0x61000000, 0x00000000, 0x00000000, 0x0000154d (        5453), 0x10001c20 (   268442656), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53706,  0x10001bf4, 0x0000049b,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001bf4 <-- 0x0000049b), 0x00000450, 0x00000452, 0x10001bf8, 0x0000049b, 0x61000000, 0x00000000, 0x00000000, 0x0000154d (        5453), 0x10001c20 (   268442656), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53707,  0x00000450,     0xb510,                                                                                                                             push, 0x00000450, 0x00000452, 0x10001bf0, 0x0000049b, 0x61000000, 0x00000000, 0x00000000, 0x0000154d (        5453), 0x10001c20 (   268442656), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 


// CSV ENTRY NUM 53708 - :
     53708,  0x00000480, 0x40048040,                                                                 alignedMemRead: 128 kB on-chip flash (0x00000480 --> 0x40048040), 0x00000452, 0x00000454, 0x10001bf0, 0x0000049b, 0x61000000, 0x00000000, 0x00000000, 0x0000154d (        5453), 0x10001c20 (   268442656), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53709,  0x00000452,     0x490b,                                                            ldrLiteral: Set Reg 1 with value 0x40048040 (from address 0x00000480), 0x00000452, 0x00000454, 0x10001bf0, 0x0000049b, 0x61000000, 0x00000000, 0x00000000, 0x0000154d (        5453), 0x40048040 (  1074036800), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53710,  0x00000454,     0x2000,                                                                                    movImmediate: Set Reg 0 with value 0x00000000, 0x00000454, 0x00000456, 0x10001bf0, 0x0000049b, 0x61000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x40048040 (  1074036800), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53711,  0x40048070, 0x00000003,                                                                       alignedMemRead: system control (0x40048070 --> 0x00000003), 0x00000456, 0x00000458, 0x10001bf0, 0x0000049b, 0x61000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x40048040 (  1074036800), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53712,  0x00000456,     0x6b09,                                                        ldrImmediateT1: Set Reg 1 with value 0x00000003 (from address 0x40048070), 0x00000456, 0x00000458, 0x10001bf0, 0x0000049b, 0x61000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x00000003 (           3), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53713,  0x00000458,     0x0789,  lslImmediate: Set Reg 1 to Reg 1 (0x00000003) shifted by 30 to left (shiftResults.result = 0xc0000000, shiftResults.carryOut = , 0x00000458, 0x0000045a, 0x10001bf0, 0x0000049b, 0x81000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0xc0000000 ( -1073741824), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53714,  0x0000045a,     0x0f89,  lsrImmediate: Set Reg 1 to Reg 1 (0xc0000000) shifted by 30 to right (shiftResults.result = 0x00000003, shiftResults.carryOut =, 0x0000045a, 0x0000045c, 0x10001bf0, 0x0000049b, 0x01000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x00000003 (           3), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53715,  0x0000045c,     0xd008,                                                                                   conditionalBranch: Not branching to 0x00000470, 0x0000045c, 0x0000045e, 0x10001bf0, 0x0000049b, 0x01000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x00000003 (           3), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53716,  0x0000045e,     0x2901,                                                                       cmpImmediate: Subtract Reg 1 (0x00000003) minus 0x00000001, 0x0000045e, 0x00000460, 0x10001bf0, 0x0000049b, 0x21000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x00000003 (           3), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53717,  0x00000460,     0xd008,                                                                                   conditionalBranch: Not branching to 0x00000474, 0x00000460, 0x00000462, 0x10001bf0, 0x0000049b, 0x21000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x00000003 (           3), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53718,  0x00000462,     0x2902,                                                                       cmpImmediate: Subtract Reg 1 (0x00000003) minus 0x00000002, 0x00000462, 0x00000464, 0x10001bf0, 0x0000049b, 0x21000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x00000003 (           3), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53719,  0x00000464,     0xd009,                                                                                   conditionalBranch: Not branching to 0x0000047a, 0x00000464, 0x00000466, 0x10001bf0, 0x0000049b, 0x21000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x00000003 (           3), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53720,  0x00000466,     0x2903,                                                                       cmpImmediate: Subtract Reg 1 (0x00000003) minus 0x00000003, 0x00000466, 0x00000468, 0x10001bf0, 0x0000049b, 0x61000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x00000003 (           3), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53721,  0x00000468,     0xd101,                                                                                   conditionalBranch: Not branching to 0x0000046e, 0x00000468, 0x0000046a, 0x10001bf0, 0x0000049b, 0x61000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x00000003 (           3), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53722,  0x0000046a, 0xf831f000,                                                                                bl: Branch to 0x0000046f (Link Reg is 0x000004d0), 0x0000046a, 0x000004d0, 0x10001bf0, 0x0000046f, 0x61000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x00000003 (           3), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53723,  0x10001be8, 0x0000185c,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001be8 <-- 0x0000185c), 0x000004d0, 0x000004d2, 0x10001bf0, 0x0000046f, 0x61000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x00000003 (           3), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53724,  0x10001bec, 0x0000046f,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001bec <-- 0x0000046f), 0x000004d0, 0x000004d2, 0x10001bf0, 0x0000046f, 0x61000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x00000003 (           3), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53725,  0x000004d0,     0xb510,                                                                                                                             push, 0x000004d0, 0x000004d2, 0x10001be8, 0x0000046f, 0x61000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x00000003 (           3), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53726,  0x000004d2, 0xffe9f7ff,                                                                                bl: Branch to 0x000004d7 (Link Reg is 0x000004a8), 0x000004d2, 0x000004a8, 0x10001be8, 0x000004d7, 0x61000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x00000003 (           3), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53727,  0x000004c4, 0x40048040,                                                                 alignedMemRead: 128 kB on-chip flash (0x000004c4 --> 0x40048040), 0x000004a8, 0x000004aa, 0x10001be8, 0x000004d7, 0x61000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x00000003 (           3), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53728,  0x000004a8,     0x4806,                                                            ldrLiteral: Set Reg 0 with value 0x40048040 (from address 0x000004c4), 0x000004a8, 0x000004aa, 0x10001be8, 0x000004d7, 0x61000000, 0x00000000, 0x00000000, 0x40048040 (  1074036800), 0x00000003 (           3), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53729,  0x40048040, 0x00000001,                                                                       alignedMemRead: system control (0x40048040 --> 0x00000001), 0x000004aa, 0x000004ac, 0x10001be8, 0x000004d7, 0x61000000, 0x00000000, 0x00000000, 0x40048040 (  1074036800), 0x00000003 (           3), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53730,  0x000004aa,     0x6800,                                                        ldrImmediateT1: Set Reg 0 with value 0x00000001 (from address 0x40048040), 0x000004aa, 0x000004ac, 0x10001be8, 0x000004d7, 0x61000000, 0x00000000, 0x00000000, 0x00000001 (           1), 0x00000003 (           3), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53731,  0x000004ac,     0x0780,  lslImmediate: Set Reg 0 to Reg 0 (0x00000001) shifted by 30 to left (shiftResults.result = 0x40000000, shiftResults.carryOut = , 0x000004ac, 0x000004ae, 0x10001be8, 0x000004d7, 0x01000000, 0x00000000, 0x00000000, 0x40000000 (  1073741824), 0x00000003 (           3), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53732,  0x000004ae,     0x0f80,  lsrImmediate: Set Reg 0 to Reg 0 (0x40000000) shifted by 30 to right (shiftResults.result = 0x00000001, shiftResults.carryOut =, 0x000004ae, 0x000004b0, 0x10001be8, 0x000004d7, 0x01000000, 0x00000000, 0x00000000, 0x00000001 (           1), 0x00000003 (           3), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53733,  0x000004b0,     0xd003,                                                                                   conditionalBranch: Not branching to 0x000004ba, 0x000004b0, 0x000004b2, 0x10001be8, 0x000004d7, 0x01000000, 0x00000000, 0x00000000, 0x00000001 (           1), 0x00000003 (           3), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53734,  0x000004b2,     0x2801,                                                                       cmpImmediate: Subtract Reg 0 (0x00000001) minus 0x00000001, 0x000004b2, 0x000004b4, 0x10001be8, 0x000004d7, 0x61000000, 0x00000000, 0x00000000, 0x00000001 (           1), 0x00000003 (           3), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53735,  0x000004b4,     0xd003,                                                                                       conditionalBranch: Branching to 0x000004be, 0x000004b4, 0x000004be, 0x10001be8, 0x000004d7, 0x61000000, 0x00000000, 0x00000000, 0x00000001 (           1), 0x00000003 (           3), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53736,  0x000004cc, 0x00001638,                                                                 alignedMemRead: 128 kB on-chip flash (0x000004cc --> 0x00001638), 0x000004be, 0x000004c0, 0x10001be8, 0x000004d7, 0x61000000, 0x00000000, 0x00000000, 0x00000001 (           1), 0x00000003 (           3), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53737,  0x000004be,     0x4803,                                                            ldrLiteral: Set Reg 0 with value 0x00001638 (from address 0x000004cc), 0x000004be, 0x000004c0, 0x10001be8, 0x000004d7, 0x61000000, 0x00000000, 0x00000000, 0x00001638 (        5688), 0x00000003 (           3), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53738,  0x00001638, 0x00b71b00,                                                                 alignedMemRead: 128 kB on-chip flash (0x00001638 --> 0x00b71b00), 0x000004c0, 0x000004c2, 0x10001be8, 0x000004d7, 0x61000000, 0x00000000, 0x00000000, 0x00001638 (        5688), 0x00000003 (           3), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53739,  0x000004c0,     0x6800,                                                        ldrImmediateT1: Set Reg 0 with value 0x00b71b00 (from address 0x00001638), 0x000004c0, 0x000004c2, 0x10001be8, 0x000004d7, 0x61000000, 0x00000000, 0x00000000, 0x00b71b00 (    12000000), 0x00000003 (           3), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53740,  0x000004c2,     0x4770,                                                                                                         bx: Branch to 0x000004d7, 0x000004c2, 0x000004d6, 0x10001be8, 0x000004d7, 0x61000000, 0x00000000, 0x00000000, 0x00b71b00 (    12000000), 0x00000003 (           3), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53741,  0x000004d6,     0x4601,                                                                        movRegister: Set Reg 1 with value from Reg 0 (0x00b71b00), 0x000004d6, 0x000004d8, 0x10001be8, 0x000004d7, 0x61000000, 0x00000000, 0x00000000, 0x00b71b00 (    12000000), 0x00b71b00 (    12000000), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53742,  0x000004e4, 0x40048000,                                                                 alignedMemRead: 128 kB on-chip flash (0x000004e4 --> 0x40048000), 0x000004d8, 0x000004da, 0x10001be8, 0x000004d7, 0x61000000, 0x00000000, 0x00000000, 0x00b71b00 (    12000000), 0x00b71b00 (    12000000), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53743,  0x000004d8,     0x4802,                                                            ldrLiteral: Set Reg 0 with value 0x40048000 (from address 0x000004e4), 0x000004d8, 0x000004da, 0x10001be8, 0x000004d7, 0x61000000, 0x00000000, 0x00000000, 0x40048000 (  1074036736), 0x00b71b00 (    12000000), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53744,  0x40048008, 0x00000023,                                                                       alignedMemRead: system control (0x40048008 --> 0x00000023), 0x000004da, 0x000004dc, 0x10001be8, 0x000004d7, 0x61000000, 0x00000000, 0x00000000, 0x40048000 (  1074036736), 0x00b71b00 (    12000000), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53745,  0x000004da,     0x6880,                                                        ldrImmediateT1: Set Reg 0 with value 0x00000023 (from address 0x40048008), 0x000004da, 0x000004dc, 0x10001be8, 0x000004d7, 0x61000000, 0x00000000, 0x00000000, 0x00000023 (          35), 0x00b71b00 (    12000000), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53746,  0x000004dc, 0xffd4f7ff,                                                                                bl: Branch to 0x000004e1 (Link Reg is 0x00000488), 0x000004dc, 0x00000488, 0x10001be8, 0x000004e1, 0x61000000, 0x00000000, 0x00000000, 0x00000023 (          35), 0x00b71b00 (    12000000), 0x00000000 (           0), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53747,  0x00000488,     0x06c2,  lslImmediate: Set Reg 2 to Reg 0 (0x00000023) shifted by 27 to left (shiftResults.result = 0x18000000, shiftResults.carryOut = , 0x00000488, 0x0000048a, 0x10001be8, 0x000004e1, 0x21000000, 0x00000000, 0x00000000, 0x00000023 (          35), 0x00b71b00 (    12000000), 0x18000000 (   402653184), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53748,  0x0000048a,     0x0ed2,  lsrImmediate: Set Reg 2 to Reg 2 (0x18000000) shifted by 27 to right (shiftResults.result = 0x00000003, shiftResults.carryOut =, 0x0000048a, 0x0000048c, 0x10001be8, 0x000004e1, 0x01000000, 0x00000000, 0x00000000, 0x00000023 (          35), 0x00b71b00 (    12000000), 0x00000003 (           3), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53749,  0x0000048c,     0x1c52,                                                                  addImmediateT1: Adding Reg 2 (0x00000003) with value 0x00000001, 0x0000048c, 0x0000048e, 0x10001be8, 0x000004e1, 0x01000000, 0x00000000, 0x00000000, 0x00000023 (          35), 0x00b71b00 (    12000000), 0x00000004 (           4), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53750,  0x0000048e,     0x4608,                                                                        movRegister: Set Reg 0 with value from Reg 1 (0x00b71b00), 0x0000048e, 0x00000490, 0x10001be8, 0x000004e1, 0x01000000, 0x00000000, 0x00000000, 0x00b71b00 (    12000000), 0x00b71b00 (    12000000), 0x00000004 (           4), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53751,  0x00000490,     0x4350,                                                                     mulRegister: Set Reg 0 with value 0x02dc6c00 (Reg 2 * Reg 0), 0x00000490, 0x00000492, 0x10001be8, 0x000004e1, 0x01000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00b71b00 (    12000000), 0x00000004 (           4), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53752,  0x00000492,     0x4770,                                                                                                         bx: Branch to 0x000004e1, 0x00000492, 0x000004e0, 0x10001be8, 0x000004e1, 0x01000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00b71b00 (    12000000), 0x00000004 (           4), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53753,  0x10001be8, 0x0000185c,                                                                           alignedMemRead: 8 kB SRAM0 (0x10001be8 --> 0x0000185c), 0x000004e0, 0x000004e2, 0x10001be8, 0x000004e1, 0x01000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00b71b00 (    12000000), 0x00000004 (           4), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53754,  0x10001bec, 0x0000046f,                                                                           alignedMemRead: 8 kB SRAM0 (0x10001bec --> 0x0000046f), 0x000004e0, 0x000004e2, 0x10001be8, 0x000004e1, 0x01000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00b71b00 (    12000000), 0x00000004 (           4), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53755,  0x000004e0,     0xbd10,                                                                                                                              pop, 0x000004e0, 0x0000046e, 0x10001bf0, 0x000004e1, 0x01000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00b71b00 (    12000000), 0x00000004 (           4), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53756,  0x10001bf0, 0x0000185c,                                                                           alignedMemRead: 8 kB SRAM0 (0x10001bf0 --> 0x0000185c), 0x0000046e, 0x00000470, 0x10001bf0, 0x000004e1, 0x01000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00b71b00 (    12000000), 0x00000004 (           4), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53757,  0x10001bf4, 0x0000049b,                                                                           alignedMemRead: 8 kB SRAM0 (0x10001bf4 --> 0x0000049b), 0x0000046e, 0x00000470, 0x10001bf0, 0x000004e1, 0x01000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00b71b00 (    12000000), 0x00000004 (           4), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53758,  0x0000046e,     0xbd10,                                                                                                                              pop, 0x0000046e, 0x0000049a, 0x10001bf8, 0x000004e1, 0x01000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00b71b00 (    12000000), 0x00000004 (           4), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53759,  0x000004a4, 0x40048040,                                                                 alignedMemRead: 128 kB on-chip flash (0x000004a4 --> 0x40048040), 0x0000049a, 0x0000049c, 0x10001bf8, 0x000004e1, 0x01000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00b71b00 (    12000000), 0x00000004 (           4), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53760,  0x0000049a,     0x4902,                                                            ldrLiteral: Set Reg 1 with value 0x40048040 (from address 0x000004a4), 0x0000049a, 0x0000049c, 0x10001bf8, 0x000004e1, 0x01000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x40048040 (  1074036800), 0x00000004 (           4), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53761,  0x40048078, 0x00000001,                                                                       alignedMemRead: system control (0x40048078 --> 0x00000001), 0x0000049c, 0x0000049e, 0x10001bf8, 0x000004e1, 0x01000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x40048040 (  1074036800), 0x00000004 (           4), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53762,  0x0000049c,     0x6b89,                                                        ldrImmediateT1: Set Reg 1 with value 0x00000001 (from address 0x40048078), 0x0000049c, 0x0000049e, 0x10001bf8, 0x000004e1, 0x01000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000001 (           1), 0x00000004 (           4), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53763,  0x0000049e, 0xff2ff7ff,                                                                                bl: Branch to 0x000004a3 (Link Reg is 0x00000300), 0x0000049e, 0x00000300, 0x10001bf8, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000001 (           1), 0x00000004 (           4), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53764,  0x10001bec, 0x0000185c,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001bec <-- 0x0000185c), 0x00000300, 0x00000302, 0x10001bf8, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000001 (           1), 0x00000004 (           4), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53765,  0x10001bf0, 0x00000001,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001bf0 <-- 0x00000001), 0x00000300, 0x00000302, 0x10001bf8, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000001 (           1), 0x00000004 (           4), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53766,  0x10001bf4, 0x000004a3,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001bf4 <-- 0x000004a3), 0x00000300, 0x00000302, 0x10001bf8, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000001 (           1), 0x00000004 (           4), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53767,  0x00000300,     0xb530,                                                                                                                             push, 0x00000300, 0x00000302, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000001 (           1), 0x00000004 (           4), 0x0000153d (        5437), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53768,  0x00000302,     0x460b,                                                                        movRegister: Set Reg 3 with value from Reg 1 (0x00000001), 0x00000302, 0x00000304, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000001 (           1), 0x00000004 (           4), 0x00000001 (           1), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53769,  0x00000304,     0x4601,                                                                        movRegister: Set Reg 1 with value from Reg 0 (0x02dc6c00), 0x00000304, 0x00000306, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x02dc6c00 (    48000000), 0x00000004 (           4), 0x00000001 (           1), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53770,  0x00000306,     0x2000,                                                                                    movImmediate: Set Reg 0 with value 0x00000000, 0x00000306, 0x00000308, 0x10001bec, 0x000004a3, 0x41000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x00000004 (           4), 0x00000001 (           1), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53771,  0x00000308,     0x2220,                                                                                    movImmediate: Set Reg 2 with value 0x00000020, 0x00000308, 0x0000030a, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x00000020 (          32), 0x00000001 (           1), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53772,  0x0000030a,     0x2401,                                                                                    movImmediate: Set Reg 4 with value 0x00000001, 0x0000030a, 0x0000030c, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x00000020 (          32), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53773,  0x0000030c,     0xe009,                                                                                        unconditionalBranch: Branch to 0x00000322, 0x0000030c, 0x00000322, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x00000020 (          32), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53774,  0x00000322,     0x4615,                                                                        movRegister: Set Reg 5 with value from Reg 2 (0x00000020), 0x00000322, 0x00000324, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x00000020 (          32), 0x00000001 (           1), 0x00000001 (           1), 0x00000020 (          32), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53775,  0x00000324,     0x1e52,                                                               subImmediateT1: Subtract Reg 2 (0x00000020) minus valid 0x00000001, 0x00000324, 0x00000326, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001f (          31), 0x00000001 (           1), 0x00000001 (           1), 0x00000020 (          32), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53776,  0x00000326,     0x2d00,                                                                       cmpImmediate: Subtract Reg 5 (0x00000020) minus 0x00000000, 0x00000326, 0x00000328, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001f (          31), 0x00000001 (           1), 0x00000001 (           1), 0x00000020 (          32), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53777,  0x00000328,     0xdcf1,                                                                                       conditionalBranch: Branching to 0x0000030e, 0x00000328, 0x0000030e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001f (          31), 0x00000001 (           1), 0x00000001 (           1), 0x00000020 (          32), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53778,  0x0000030e,     0x460d,                                                                        movRegister: Set Reg 5 with value from Reg 1 (0x02dc6c00), 0x0000030e, 0x00000310, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001f (          31), 0x00000001 (           1), 0x00000001 (           1), 0x02dc6c00 (    48000000), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53779,  0x00000310,     0x40d5,  lsrRegister: Set Reg 5 to Reg 5 (0x02dc6c00) shifted by 31 (Value of Reg 2) to left (shiftResults.result = 0x00000000, shiftRes, 0x00000310, 0x00000312, 0x10001bec, 0x000004a3, 0x41000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001f (          31), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53780,  0x00000312,     0x429d,                                                              cmpRegisterT1: Subtract Reg 5 (0x00000000) minus Reg 3 (0x00000001), 0x00000312, 0x00000314, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001f (          31), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53781,  0x00000314,     0xd305,                                                                                       conditionalBranch: Branching to 0x00000322, 0x00000314, 0x00000322, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001f (          31), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53782,  0x00000322,     0x4615,                                                                        movRegister: Set Reg 5 with value from Reg 2 (0x0000001f), 0x00000322, 0x00000324, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001f (          31), 0x00000001 (           1), 0x00000001 (           1), 0x0000001f (          31), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53783,  0x00000324,     0x1e52,                                                               subImmediateT1: Subtract Reg 2 (0x0000001f) minus valid 0x00000001, 0x00000324, 0x00000326, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001e (          30), 0x00000001 (           1), 0x00000001 (           1), 0x0000001f (          31), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53784,  0x00000326,     0x2d00,                                                                       cmpImmediate: Subtract Reg 5 (0x0000001f) minus 0x00000000, 0x00000326, 0x00000328, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001e (          30), 0x00000001 (           1), 0x00000001 (           1), 0x0000001f (          31), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53785,  0x00000328,     0xdcf1,                                                                                       conditionalBranch: Branching to 0x0000030e, 0x00000328, 0x0000030e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001e (          30), 0x00000001 (           1), 0x00000001 (           1), 0x0000001f (          31), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53786,  0x0000030e,     0x460d,                                                                        movRegister: Set Reg 5 with value from Reg 1 (0x02dc6c00), 0x0000030e, 0x00000310, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001e (          30), 0x00000001 (           1), 0x00000001 (           1), 0x02dc6c00 (    48000000), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53787,  0x00000310,     0x40d5,  lsrRegister: Set Reg 5 to Reg 5 (0x02dc6c00) shifted by 30 (Value of Reg 2) to left (shiftResults.result = 0x00000000, shiftRes, 0x00000310, 0x00000312, 0x10001bec, 0x000004a3, 0x41000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001e (          30), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53788,  0x00000312,     0x429d,                                                              cmpRegisterT1: Subtract Reg 5 (0x00000000) minus Reg 3 (0x00000001), 0x00000312, 0x00000314, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001e (          30), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53789,  0x00000314,     0xd305,                                                                                       conditionalBranch: Branching to 0x00000322, 0x00000314, 0x00000322, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001e (          30), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53790,  0x00000322,     0x4615,                                                                        movRegister: Set Reg 5 with value from Reg 2 (0x0000001e), 0x00000322, 0x00000324, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001e (          30), 0x00000001 (           1), 0x00000001 (           1), 0x0000001e (          30), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53791,  0x00000324,     0x1e52,                                                               subImmediateT1: Subtract Reg 2 (0x0000001e) minus valid 0x00000001, 0x00000324, 0x00000326, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001d (          29), 0x00000001 (           1), 0x00000001 (           1), 0x0000001e (          30), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53792,  0x00000326,     0x2d00,                                                                       cmpImmediate: Subtract Reg 5 (0x0000001e) minus 0x00000000, 0x00000326, 0x00000328, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001d (          29), 0x00000001 (           1), 0x00000001 (           1), 0x0000001e (          30), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53793,  0x00000328,     0xdcf1,                                                                                       conditionalBranch: Branching to 0x0000030e, 0x00000328, 0x0000030e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001d (          29), 0x00000001 (           1), 0x00000001 (           1), 0x0000001e (          30), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53794,  0x0000030e,     0x460d,                                                                        movRegister: Set Reg 5 with value from Reg 1 (0x02dc6c00), 0x0000030e, 0x00000310, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001d (          29), 0x00000001 (           1), 0x00000001 (           1), 0x02dc6c00 (    48000000), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53795,  0x00000310,     0x40d5,  lsrRegister: Set Reg 5 to Reg 5 (0x02dc6c00) shifted by 29 (Value of Reg 2) to left (shiftResults.result = 0x00000000, shiftRes, 0x00000310, 0x00000312, 0x10001bec, 0x000004a3, 0x41000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001d (          29), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53796,  0x00000312,     0x429d,                                                              cmpRegisterT1: Subtract Reg 5 (0x00000000) minus Reg 3 (0x00000001), 0x00000312, 0x00000314, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001d (          29), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53797,  0x00000314,     0xd305,                                                                                       conditionalBranch: Branching to 0x00000322, 0x00000314, 0x00000322, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001d (          29), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53798,  0x00000322,     0x4615,                                                                        movRegister: Set Reg 5 with value from Reg 2 (0x0000001d), 0x00000322, 0x00000324, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001d (          29), 0x00000001 (           1), 0x00000001 (           1), 0x0000001d (          29), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53799,  0x00000324,     0x1e52,                                                               subImmediateT1: Subtract Reg 2 (0x0000001d) minus valid 0x00000001, 0x00000324, 0x00000326, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001c (          28), 0x00000001 (           1), 0x00000001 (           1), 0x0000001d (          29), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53800,  0x00000326,     0x2d00,                                                                       cmpImmediate: Subtract Reg 5 (0x0000001d) minus 0x00000000, 0x00000326, 0x00000328, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001c (          28), 0x00000001 (           1), 0x00000001 (           1), 0x0000001d (          29), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53801,  0x00000328,     0xdcf1,                                                                                       conditionalBranch: Branching to 0x0000030e, 0x00000328, 0x0000030e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001c (          28), 0x00000001 (           1), 0x00000001 (           1), 0x0000001d (          29), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53802,  0x0000030e,     0x460d,                                                                        movRegister: Set Reg 5 with value from Reg 1 (0x02dc6c00), 0x0000030e, 0x00000310, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001c (          28), 0x00000001 (           1), 0x00000001 (           1), 0x02dc6c00 (    48000000), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53803,  0x00000310,     0x40d5,  lsrRegister: Set Reg 5 to Reg 5 (0x02dc6c00) shifted by 28 (Value of Reg 2) to left (shiftResults.result = 0x00000000, shiftRes, 0x00000310, 0x00000312, 0x10001bec, 0x000004a3, 0x41000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001c (          28), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53804,  0x00000312,     0x429d,                                                              cmpRegisterT1: Subtract Reg 5 (0x00000000) minus Reg 3 (0x00000001), 0x00000312, 0x00000314, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001c (          28), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53805,  0x00000314,     0xd305,                                                                                       conditionalBranch: Branching to 0x00000322, 0x00000314, 0x00000322, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001c (          28), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53806,  0x00000322,     0x4615,                                                                        movRegister: Set Reg 5 with value from Reg 2 (0x0000001c), 0x00000322, 0x00000324, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001c (          28), 0x00000001 (           1), 0x00000001 (           1), 0x0000001c (          28), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53807,  0x00000324,     0x1e52,                                                               subImmediateT1: Subtract Reg 2 (0x0000001c) minus valid 0x00000001, 0x00000324, 0x00000326, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001b (          27), 0x00000001 (           1), 0x00000001 (           1), 0x0000001c (          28), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53808,  0x00000326,     0x2d00,                                                                       cmpImmediate: Subtract Reg 5 (0x0000001c) minus 0x00000000, 0x00000326, 0x00000328, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001b (          27), 0x00000001 (           1), 0x00000001 (           1), 0x0000001c (          28), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53809,  0x00000328,     0xdcf1,                                                                                       conditionalBranch: Branching to 0x0000030e, 0x00000328, 0x0000030e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001b (          27), 0x00000001 (           1), 0x00000001 (           1), 0x0000001c (          28), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53810,  0x0000030e,     0x460d,                                                                        movRegister: Set Reg 5 with value from Reg 1 (0x02dc6c00), 0x0000030e, 0x00000310, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001b (          27), 0x00000001 (           1), 0x00000001 (           1), 0x02dc6c00 (    48000000), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53811,  0x00000310,     0x40d5,  lsrRegister: Set Reg 5 to Reg 5 (0x02dc6c00) shifted by 27 (Value of Reg 2) to left (shiftResults.result = 0x00000000, shiftRes, 0x00000310, 0x00000312, 0x10001bec, 0x000004a3, 0x41000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001b (          27), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53812,  0x00000312,     0x429d,                                                              cmpRegisterT1: Subtract Reg 5 (0x00000000) minus Reg 3 (0x00000001), 0x00000312, 0x00000314, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001b (          27), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53813,  0x00000314,     0xd305,                                                                                       conditionalBranch: Branching to 0x00000322, 0x00000314, 0x00000322, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001b (          27), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53814,  0x00000322,     0x4615,                                                                        movRegister: Set Reg 5 with value from Reg 2 (0x0000001b), 0x00000322, 0x00000324, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001b (          27), 0x00000001 (           1), 0x00000001 (           1), 0x0000001b (          27), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53815,  0x00000324,     0x1e52,                                                               subImmediateT1: Subtract Reg 2 (0x0000001b) minus valid 0x00000001, 0x00000324, 0x00000326, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001a (          26), 0x00000001 (           1), 0x00000001 (           1), 0x0000001b (          27), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53816,  0x00000326,     0x2d00,                                                                       cmpImmediate: Subtract Reg 5 (0x0000001b) minus 0x00000000, 0x00000326, 0x00000328, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001a (          26), 0x00000001 (           1), 0x00000001 (           1), 0x0000001b (          27), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53817,  0x00000328,     0xdcf1,                                                                                       conditionalBranch: Branching to 0x0000030e, 0x00000328, 0x0000030e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001a (          26), 0x00000001 (           1), 0x00000001 (           1), 0x0000001b (          27), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53818,  0x0000030e,     0x460d,                                                                        movRegister: Set Reg 5 with value from Reg 1 (0x02dc6c00), 0x0000030e, 0x00000310, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001a (          26), 0x00000001 (           1), 0x00000001 (           1), 0x02dc6c00 (    48000000), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53819,  0x00000310,     0x40d5,  lsrRegister: Set Reg 5 to Reg 5 (0x02dc6c00) shifted by 26 (Value of Reg 2) to left (shiftResults.result = 0x00000000, shiftRes, 0x00000310, 0x00000312, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001a (          26), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53820,  0x00000312,     0x429d,                                                              cmpRegisterT1: Subtract Reg 5 (0x00000000) minus Reg 3 (0x00000001), 0x00000312, 0x00000314, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001a (          26), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53821,  0x00000314,     0xd305,                                                                                       conditionalBranch: Branching to 0x00000322, 0x00000314, 0x00000322, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001a (          26), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53822,  0x00000322,     0x4615,                                                                        movRegister: Set Reg 5 with value from Reg 2 (0x0000001a), 0x00000322, 0x00000324, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x0000001a (          26), 0x00000001 (           1), 0x00000001 (           1), 0x0000001a (          26), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53823,  0x00000324,     0x1e52,                                                               subImmediateT1: Subtract Reg 2 (0x0000001a) minus valid 0x00000001, 0x00000324, 0x00000326, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x00000019 (          25), 0x00000001 (           1), 0x00000001 (           1), 0x0000001a (          26), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53824,  0x00000326,     0x2d00,                                                                       cmpImmediate: Subtract Reg 5 (0x0000001a) minus 0x00000000, 0x00000326, 0x00000328, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x00000019 (          25), 0x00000001 (           1), 0x00000001 (           1), 0x0000001a (          26), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53825,  0x00000328,     0xdcf1,                                                                                       conditionalBranch: Branching to 0x0000030e, 0x00000328, 0x0000030e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x00000019 (          25), 0x00000001 (           1), 0x00000001 (           1), 0x0000001a (          26), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53826,  0x0000030e,     0x460d,                                                                        movRegister: Set Reg 5 with value from Reg 1 (0x02dc6c00), 0x0000030e, 0x00000310, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x00000019 (          25), 0x00000001 (           1), 0x00000001 (           1), 0x02dc6c00 (    48000000), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53827,  0x00000310,     0x40d5,  lsrRegister: Set Reg 5 to Reg 5 (0x02dc6c00) shifted by 25 (Value of Reg 2) to left (shiftResults.result = 0x00000001, shiftRes, 0x00000310, 0x00000312, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x00000019 (          25), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53828,  0x00000312,     0x429d,                                                              cmpRegisterT1: Subtract Reg 5 (0x00000001) minus Reg 3 (0x00000001), 0x00000312, 0x00000314, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x00000019 (          25), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53829,  0x00000314,     0xd305,                                                                                   conditionalBranch: Not branching to 0x00000322, 0x00000314, 0x00000316, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x00000019 (          25), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53830,  0x00000316,     0x461d,                                                                        movRegister: Set Reg 5 with value from Reg 3 (0x00000001), 0x00000316, 0x00000318, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x00000019 (          25), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53831,  0x00000318,     0x4095,  lslRegister: Set Reg 5 to Reg 5 (0x00000001) shifted by 25 (Value of Reg 2) to left (shiftResults.result = 0x02000000, shiftRes, 0x00000318, 0x0000031a, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x00000019 (          25), 0x00000001 (           1), 0x00000001 (           1), 0x02000000 (    33554432), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53832,  0x0000031a,     0x1b49,                                                                subRegister: Subtract Reg 1 (0x02dc6c00) minus Reg 5 (0x02000000), 0x0000031a, 0x0000031c, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x00dc6c00 (    14445568), 0x00000019 (          25), 0x00000001 (           1), 0x00000001 (           1), 0x02000000 (    33554432), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53833,  0x0000031c,     0x4625,                                                                        movRegister: Set Reg 5 with value from Reg 4 (0x00000001), 0x0000031c, 0x0000031e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x00dc6c00 (    14445568), 0x00000019 (          25), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53834,  0x0000031e,     0x4095,  lslRegister: Set Reg 5 to Reg 5 (0x00000001) shifted by 25 (Value of Reg 2) to left (shiftResults.result = 0x02000000, shiftRes, 0x0000031e, 0x00000320, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x00dc6c00 (    14445568), 0x00000019 (          25), 0x00000001 (           1), 0x00000001 (           1), 0x02000000 (    33554432), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53835,  0x00000320,     0x1940,                                                                     addRegisterT1: Add Reg 0 (0x00000000) and Reg 5 (0x02000000), 0x00000320, 0x00000322, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02000000 (    33554432), 0x00dc6c00 (    14445568), 0x00000019 (          25), 0x00000001 (           1), 0x00000001 (           1), 0x02000000 (    33554432), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53836,  0x00000322,     0x4615,                                                                        movRegister: Set Reg 5 with value from Reg 2 (0x00000019), 0x00000322, 0x00000324, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02000000 (    33554432), 0x00dc6c00 (    14445568), 0x00000019 (          25), 0x00000001 (           1), 0x00000001 (           1), 0x00000019 (          25), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53837,  0x00000324,     0x1e52,                                                               subImmediateT1: Subtract Reg 2 (0x00000019) minus valid 0x00000001, 0x00000324, 0x00000326, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02000000 (    33554432), 0x00dc6c00 (    14445568), 0x00000018 (          24), 0x00000001 (           1), 0x00000001 (           1), 0x00000019 (          25), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53838,  0x00000326,     0x2d00,                                                                       cmpImmediate: Subtract Reg 5 (0x00000019) minus 0x00000000, 0x00000326, 0x00000328, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02000000 (    33554432), 0x00dc6c00 (    14445568), 0x00000018 (          24), 0x00000001 (           1), 0x00000001 (           1), 0x00000019 (          25), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53839,  0x00000328,     0xdcf1,                                                                                       conditionalBranch: Branching to 0x0000030e, 0x00000328, 0x0000030e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02000000 (    33554432), 0x00dc6c00 (    14445568), 0x00000018 (          24), 0x00000001 (           1), 0x00000001 (           1), 0x00000019 (          25), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53840,  0x0000030e,     0x460d,                                                                        movRegister: Set Reg 5 with value from Reg 1 (0x00dc6c00), 0x0000030e, 0x00000310, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02000000 (    33554432), 0x00dc6c00 (    14445568), 0x00000018 (          24), 0x00000001 (           1), 0x00000001 (           1), 0x00dc6c00 (    14445568), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53841,  0x00000310,     0x40d5,  lsrRegister: Set Reg 5 to Reg 5 (0x00dc6c00) shifted by 24 (Value of Reg 2) to left (shiftResults.result = 0x00000000, shiftRes, 0x00000310, 0x00000312, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02000000 (    33554432), 0x00dc6c00 (    14445568), 0x00000018 (          24), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53842,  0x00000312,     0x429d,                                                              cmpRegisterT1: Subtract Reg 5 (0x00000000) minus Reg 3 (0x00000001), 0x00000312, 0x00000314, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02000000 (    33554432), 0x00dc6c00 (    14445568), 0x00000018 (          24), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53843,  0x00000314,     0xd305,                                                                                       conditionalBranch: Branching to 0x00000322, 0x00000314, 0x00000322, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02000000 (    33554432), 0x00dc6c00 (    14445568), 0x00000018 (          24), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53844,  0x00000322,     0x4615,                                                                        movRegister: Set Reg 5 with value from Reg 2 (0x00000018), 0x00000322, 0x00000324, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02000000 (    33554432), 0x00dc6c00 (    14445568), 0x00000018 (          24), 0x00000001 (           1), 0x00000001 (           1), 0x00000018 (          24), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53845,  0x00000324,     0x1e52,                                                               subImmediateT1: Subtract Reg 2 (0x00000018) minus valid 0x00000001, 0x00000324, 0x00000326, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02000000 (    33554432), 0x00dc6c00 (    14445568), 0x00000017 (          23), 0x00000001 (           1), 0x00000001 (           1), 0x00000018 (          24), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53846,  0x00000326,     0x2d00,                                                                       cmpImmediate: Subtract Reg 5 (0x00000018) minus 0x00000000, 0x00000326, 0x00000328, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02000000 (    33554432), 0x00dc6c00 (    14445568), 0x00000017 (          23), 0x00000001 (           1), 0x00000001 (           1), 0x00000018 (          24), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53847,  0x00000328,     0xdcf1,                                                                                       conditionalBranch: Branching to 0x0000030e, 0x00000328, 0x0000030e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02000000 (    33554432), 0x00dc6c00 (    14445568), 0x00000017 (          23), 0x00000001 (           1), 0x00000001 (           1), 0x00000018 (          24), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53848,  0x0000030e,     0x460d,                                                                        movRegister: Set Reg 5 with value from Reg 1 (0x00dc6c00), 0x0000030e, 0x00000310, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02000000 (    33554432), 0x00dc6c00 (    14445568), 0x00000017 (          23), 0x00000001 (           1), 0x00000001 (           1), 0x00dc6c00 (    14445568), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53849,  0x00000310,     0x40d5,  lsrRegister: Set Reg 5 to Reg 5 (0x00dc6c00) shifted by 23 (Value of Reg 2) to left (shiftResults.result = 0x00000001, shiftRes, 0x00000310, 0x00000312, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02000000 (    33554432), 0x00dc6c00 (    14445568), 0x00000017 (          23), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53850,  0x00000312,     0x429d,                                                              cmpRegisterT1: Subtract Reg 5 (0x00000001) minus Reg 3 (0x00000001), 0x00000312, 0x00000314, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02000000 (    33554432), 0x00dc6c00 (    14445568), 0x00000017 (          23), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53851,  0x00000314,     0xd305,                                                                                   conditionalBranch: Not branching to 0x00000322, 0x00000314, 0x00000316, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02000000 (    33554432), 0x00dc6c00 (    14445568), 0x00000017 (          23), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53852,  0x00000316,     0x461d,                                                                        movRegister: Set Reg 5 with value from Reg 3 (0x00000001), 0x00000316, 0x00000318, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02000000 (    33554432), 0x00dc6c00 (    14445568), 0x00000017 (          23), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53853,  0x00000318,     0x4095,  lslRegister: Set Reg 5 to Reg 5 (0x00000001) shifted by 23 (Value of Reg 2) to left (shiftResults.result = 0x00800000, shiftRes, 0x00000318, 0x0000031a, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02000000 (    33554432), 0x00dc6c00 (    14445568), 0x00000017 (          23), 0x00000001 (           1), 0x00000001 (           1), 0x00800000 (     8388608), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53854,  0x0000031a,     0x1b49,                                                                subRegister: Subtract Reg 1 (0x00dc6c00) minus Reg 5 (0x00800000), 0x0000031a, 0x0000031c, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02000000 (    33554432), 0x005c6c00 (     6056960), 0x00000017 (          23), 0x00000001 (           1), 0x00000001 (           1), 0x00800000 (     8388608), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53855,  0x0000031c,     0x4625,                                                                        movRegister: Set Reg 5 with value from Reg 4 (0x00000001), 0x0000031c, 0x0000031e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02000000 (    33554432), 0x005c6c00 (     6056960), 0x00000017 (          23), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53856,  0x0000031e,     0x4095,  lslRegister: Set Reg 5 to Reg 5 (0x00000001) shifted by 23 (Value of Reg 2) to left (shiftResults.result = 0x00800000, shiftRes, 0x0000031e, 0x00000320, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02000000 (    33554432), 0x005c6c00 (     6056960), 0x00000017 (          23), 0x00000001 (           1), 0x00000001 (           1), 0x00800000 (     8388608), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53857,  0x00000320,     0x1940,                                                                     addRegisterT1: Add Reg 0 (0x02000000) and Reg 5 (0x00800000), 0x00000320, 0x00000322, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02800000 (    41943040), 0x005c6c00 (     6056960), 0x00000017 (          23), 0x00000001 (           1), 0x00000001 (           1), 0x00800000 (     8388608), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53858,  0x00000322,     0x4615,                                                                        movRegister: Set Reg 5 with value from Reg 2 (0x00000017), 0x00000322, 0x00000324, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02800000 (    41943040), 0x005c6c00 (     6056960), 0x00000017 (          23), 0x00000001 (           1), 0x00000001 (           1), 0x00000017 (          23), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53859,  0x00000324,     0x1e52,                                                               subImmediateT1: Subtract Reg 2 (0x00000017) minus valid 0x00000001, 0x00000324, 0x00000326, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02800000 (    41943040), 0x005c6c00 (     6056960), 0x00000016 (          22), 0x00000001 (           1), 0x00000001 (           1), 0x00000017 (          23), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53860,  0x00000326,     0x2d00,                                                                       cmpImmediate: Subtract Reg 5 (0x00000017) minus 0x00000000, 0x00000326, 0x00000328, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02800000 (    41943040), 0x005c6c00 (     6056960), 0x00000016 (          22), 0x00000001 (           1), 0x00000001 (           1), 0x00000017 (          23), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53861,  0x00000328,     0xdcf1,                                                                                       conditionalBranch: Branching to 0x0000030e, 0x00000328, 0x0000030e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02800000 (    41943040), 0x005c6c00 (     6056960), 0x00000016 (          22), 0x00000001 (           1), 0x00000001 (           1), 0x00000017 (          23), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53862,  0x0000030e,     0x460d,                                                                        movRegister: Set Reg 5 with value from Reg 1 (0x005c6c00), 0x0000030e, 0x00000310, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02800000 (    41943040), 0x005c6c00 (     6056960), 0x00000016 (          22), 0x00000001 (           1), 0x00000001 (           1), 0x005c6c00 (     6056960), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53863,  0x00000310,     0x40d5,  lsrRegister: Set Reg 5 to Reg 5 (0x005c6c00) shifted by 22 (Value of Reg 2) to left (shiftResults.result = 0x00000001, shiftRes, 0x00000310, 0x00000312, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02800000 (    41943040), 0x005c6c00 (     6056960), 0x00000016 (          22), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53864,  0x00000312,     0x429d,                                                              cmpRegisterT1: Subtract Reg 5 (0x00000001) minus Reg 3 (0x00000001), 0x00000312, 0x00000314, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02800000 (    41943040), 0x005c6c00 (     6056960), 0x00000016 (          22), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53865,  0x00000314,     0xd305,                                                                                   conditionalBranch: Not branching to 0x00000322, 0x00000314, 0x00000316, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02800000 (    41943040), 0x005c6c00 (     6056960), 0x00000016 (          22), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53866,  0x00000316,     0x461d,                                                                        movRegister: Set Reg 5 with value from Reg 3 (0x00000001), 0x00000316, 0x00000318, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02800000 (    41943040), 0x005c6c00 (     6056960), 0x00000016 (          22), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53867,  0x00000318,     0x4095,  lslRegister: Set Reg 5 to Reg 5 (0x00000001) shifted by 22 (Value of Reg 2) to left (shiftResults.result = 0x00400000, shiftRes, 0x00000318, 0x0000031a, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02800000 (    41943040), 0x005c6c00 (     6056960), 0x00000016 (          22), 0x00000001 (           1), 0x00000001 (           1), 0x00400000 (     4194304), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53868,  0x0000031a,     0x1b49,                                                                subRegister: Subtract Reg 1 (0x005c6c00) minus Reg 5 (0x00400000), 0x0000031a, 0x0000031c, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02800000 (    41943040), 0x001c6c00 (     1862656), 0x00000016 (          22), 0x00000001 (           1), 0x00000001 (           1), 0x00400000 (     4194304), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53869,  0x0000031c,     0x4625,                                                                        movRegister: Set Reg 5 with value from Reg 4 (0x00000001), 0x0000031c, 0x0000031e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02800000 (    41943040), 0x001c6c00 (     1862656), 0x00000016 (          22), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53870,  0x0000031e,     0x4095,  lslRegister: Set Reg 5 to Reg 5 (0x00000001) shifted by 22 (Value of Reg 2) to left (shiftResults.result = 0x00400000, shiftRes, 0x0000031e, 0x00000320, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02800000 (    41943040), 0x001c6c00 (     1862656), 0x00000016 (          22), 0x00000001 (           1), 0x00000001 (           1), 0x00400000 (     4194304), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53871,  0x00000320,     0x1940,                                                                     addRegisterT1: Add Reg 0 (0x02800000) and Reg 5 (0x00400000), 0x00000320, 0x00000322, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02c00000 (    46137344), 0x001c6c00 (     1862656), 0x00000016 (          22), 0x00000001 (           1), 0x00000001 (           1), 0x00400000 (     4194304), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53872,  0x00000322,     0x4615,                                                                        movRegister: Set Reg 5 with value from Reg 2 (0x00000016), 0x00000322, 0x00000324, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02c00000 (    46137344), 0x001c6c00 (     1862656), 0x00000016 (          22), 0x00000001 (           1), 0x00000001 (           1), 0x00000016 (          22), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53873,  0x00000324,     0x1e52,                                                               subImmediateT1: Subtract Reg 2 (0x00000016) minus valid 0x00000001, 0x00000324, 0x00000326, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02c00000 (    46137344), 0x001c6c00 (     1862656), 0x00000015 (          21), 0x00000001 (           1), 0x00000001 (           1), 0x00000016 (          22), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53874,  0x00000326,     0x2d00,                                                                       cmpImmediate: Subtract Reg 5 (0x00000016) minus 0x00000000, 0x00000326, 0x00000328, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02c00000 (    46137344), 0x001c6c00 (     1862656), 0x00000015 (          21), 0x00000001 (           1), 0x00000001 (           1), 0x00000016 (          22), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53875,  0x00000328,     0xdcf1,                                                                                       conditionalBranch: Branching to 0x0000030e, 0x00000328, 0x0000030e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02c00000 (    46137344), 0x001c6c00 (     1862656), 0x00000015 (          21), 0x00000001 (           1), 0x00000001 (           1), 0x00000016 (          22), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53876,  0x0000030e,     0x460d,                                                                        movRegister: Set Reg 5 with value from Reg 1 (0x001c6c00), 0x0000030e, 0x00000310, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02c00000 (    46137344), 0x001c6c00 (     1862656), 0x00000015 (          21), 0x00000001 (           1), 0x00000001 (           1), 0x001c6c00 (     1862656), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53877,  0x00000310,     0x40d5,  lsrRegister: Set Reg 5 to Reg 5 (0x001c6c00) shifted by 21 (Value of Reg 2) to left (shiftResults.result = 0x00000000, shiftRes, 0x00000310, 0x00000312, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02c00000 (    46137344), 0x001c6c00 (     1862656), 0x00000015 (          21), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53878,  0x00000312,     0x429d,                                                              cmpRegisterT1: Subtract Reg 5 (0x00000000) minus Reg 3 (0x00000001), 0x00000312, 0x00000314, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02c00000 (    46137344), 0x001c6c00 (     1862656), 0x00000015 (          21), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53879,  0x00000314,     0xd305,                                                                                       conditionalBranch: Branching to 0x00000322, 0x00000314, 0x00000322, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02c00000 (    46137344), 0x001c6c00 (     1862656), 0x00000015 (          21), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53880,  0x00000322,     0x4615,                                                                        movRegister: Set Reg 5 with value from Reg 2 (0x00000015), 0x00000322, 0x00000324, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02c00000 (    46137344), 0x001c6c00 (     1862656), 0x00000015 (          21), 0x00000001 (           1), 0x00000001 (           1), 0x00000015 (          21), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53881,  0x00000324,     0x1e52,                                                               subImmediateT1: Subtract Reg 2 (0x00000015) minus valid 0x00000001, 0x00000324, 0x00000326, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02c00000 (    46137344), 0x001c6c00 (     1862656), 0x00000014 (          20), 0x00000001 (           1), 0x00000001 (           1), 0x00000015 (          21), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53882,  0x00000326,     0x2d00,                                                                       cmpImmediate: Subtract Reg 5 (0x00000015) minus 0x00000000, 0x00000326, 0x00000328, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02c00000 (    46137344), 0x001c6c00 (     1862656), 0x00000014 (          20), 0x00000001 (           1), 0x00000001 (           1), 0x00000015 (          21), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53883,  0x00000328,     0xdcf1,                                                                                       conditionalBranch: Branching to 0x0000030e, 0x00000328, 0x0000030e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02c00000 (    46137344), 0x001c6c00 (     1862656), 0x00000014 (          20), 0x00000001 (           1), 0x00000001 (           1), 0x00000015 (          21), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53884,  0x0000030e,     0x460d,                                                                        movRegister: Set Reg 5 with value from Reg 1 (0x001c6c00), 0x0000030e, 0x00000310, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02c00000 (    46137344), 0x001c6c00 (     1862656), 0x00000014 (          20), 0x00000001 (           1), 0x00000001 (           1), 0x001c6c00 (     1862656), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53885,  0x00000310,     0x40d5,  lsrRegister: Set Reg 5 to Reg 5 (0x001c6c00) shifted by 20 (Value of Reg 2) to left (shiftResults.result = 0x00000001, shiftRes, 0x00000310, 0x00000312, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02c00000 (    46137344), 0x001c6c00 (     1862656), 0x00000014 (          20), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53886,  0x00000312,     0x429d,                                                              cmpRegisterT1: Subtract Reg 5 (0x00000001) minus Reg 3 (0x00000001), 0x00000312, 0x00000314, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02c00000 (    46137344), 0x001c6c00 (     1862656), 0x00000014 (          20), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53887,  0x00000314,     0xd305,                                                                                   conditionalBranch: Not branching to 0x00000322, 0x00000314, 0x00000316, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02c00000 (    46137344), 0x001c6c00 (     1862656), 0x00000014 (          20), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53888,  0x00000316,     0x461d,                                                                        movRegister: Set Reg 5 with value from Reg 3 (0x00000001), 0x00000316, 0x00000318, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02c00000 (    46137344), 0x001c6c00 (     1862656), 0x00000014 (          20), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53889,  0x00000318,     0x4095,  lslRegister: Set Reg 5 to Reg 5 (0x00000001) shifted by 20 (Value of Reg 2) to left (shiftResults.result = 0x00100000, shiftRes, 0x00000318, 0x0000031a, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02c00000 (    46137344), 0x001c6c00 (     1862656), 0x00000014 (          20), 0x00000001 (           1), 0x00000001 (           1), 0x00100000 (     1048576), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53890,  0x0000031a,     0x1b49,                                                                subRegister: Subtract Reg 1 (0x001c6c00) minus Reg 5 (0x00100000), 0x0000031a, 0x0000031c, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02c00000 (    46137344), 0x000c6c00 (      814080), 0x00000014 (          20), 0x00000001 (           1), 0x00000001 (           1), 0x00100000 (     1048576), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53891,  0x0000031c,     0x4625,                                                                        movRegister: Set Reg 5 with value from Reg 4 (0x00000001), 0x0000031c, 0x0000031e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02c00000 (    46137344), 0x000c6c00 (      814080), 0x00000014 (          20), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53892,  0x0000031e,     0x4095,  lslRegister: Set Reg 5 to Reg 5 (0x00000001) shifted by 20 (Value of Reg 2) to left (shiftResults.result = 0x00100000, shiftRes, 0x0000031e, 0x00000320, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02c00000 (    46137344), 0x000c6c00 (      814080), 0x00000014 (          20), 0x00000001 (           1), 0x00000001 (           1), 0x00100000 (     1048576), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53893,  0x00000320,     0x1940,                                                                     addRegisterT1: Add Reg 0 (0x02c00000) and Reg 5 (0x00100000), 0x00000320, 0x00000322, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02d00000 (    47185920), 0x000c6c00 (      814080), 0x00000014 (          20), 0x00000001 (           1), 0x00000001 (           1), 0x00100000 (     1048576), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53894,  0x00000322,     0x4615,                                                                        movRegister: Set Reg 5 with value from Reg 2 (0x00000014), 0x00000322, 0x00000324, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02d00000 (    47185920), 0x000c6c00 (      814080), 0x00000014 (          20), 0x00000001 (           1), 0x00000001 (           1), 0x00000014 (          20), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53895,  0x00000324,     0x1e52,                                                               subImmediateT1: Subtract Reg 2 (0x00000014) minus valid 0x00000001, 0x00000324, 0x00000326, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02d00000 (    47185920), 0x000c6c00 (      814080), 0x00000013 (          19), 0x00000001 (           1), 0x00000001 (           1), 0x00000014 (          20), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53896,  0x00000326,     0x2d00,                                                                       cmpImmediate: Subtract Reg 5 (0x00000014) minus 0x00000000, 0x00000326, 0x00000328, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02d00000 (    47185920), 0x000c6c00 (      814080), 0x00000013 (          19), 0x00000001 (           1), 0x00000001 (           1), 0x00000014 (          20), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53897,  0x00000328,     0xdcf1,                                                                                       conditionalBranch: Branching to 0x0000030e, 0x00000328, 0x0000030e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02d00000 (    47185920), 0x000c6c00 (      814080), 0x00000013 (          19), 0x00000001 (           1), 0x00000001 (           1), 0x00000014 (          20), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53898,  0x0000030e,     0x460d,                                                                        movRegister: Set Reg 5 with value from Reg 1 (0x000c6c00), 0x0000030e, 0x00000310, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02d00000 (    47185920), 0x000c6c00 (      814080), 0x00000013 (          19), 0x00000001 (           1), 0x00000001 (           1), 0x000c6c00 (      814080), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53899,  0x00000310,     0x40d5,  lsrRegister: Set Reg 5 to Reg 5 (0x000c6c00) shifted by 19 (Value of Reg 2) to left (shiftResults.result = 0x00000001, shiftRes, 0x00000310, 0x00000312, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02d00000 (    47185920), 0x000c6c00 (      814080), 0x00000013 (          19), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53900,  0x00000312,     0x429d,                                                              cmpRegisterT1: Subtract Reg 5 (0x00000001) minus Reg 3 (0x00000001), 0x00000312, 0x00000314, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02d00000 (    47185920), 0x000c6c00 (      814080), 0x00000013 (          19), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53901,  0x00000314,     0xd305,                                                                                   conditionalBranch: Not branching to 0x00000322, 0x00000314, 0x00000316, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02d00000 (    47185920), 0x000c6c00 (      814080), 0x00000013 (          19), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53902,  0x00000316,     0x461d,                                                                        movRegister: Set Reg 5 with value from Reg 3 (0x00000001), 0x00000316, 0x00000318, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02d00000 (    47185920), 0x000c6c00 (      814080), 0x00000013 (          19), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53903,  0x00000318,     0x4095,  lslRegister: Set Reg 5 to Reg 5 (0x00000001) shifted by 19 (Value of Reg 2) to left (shiftResults.result = 0x00080000, shiftRes, 0x00000318, 0x0000031a, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02d00000 (    47185920), 0x000c6c00 (      814080), 0x00000013 (          19), 0x00000001 (           1), 0x00000001 (           1), 0x00080000 (      524288), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53904,  0x0000031a,     0x1b49,                                                                subRegister: Subtract Reg 1 (0x000c6c00) minus Reg 5 (0x00080000), 0x0000031a, 0x0000031c, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02d00000 (    47185920), 0x00046c00 (      289792), 0x00000013 (          19), 0x00000001 (           1), 0x00000001 (           1), 0x00080000 (      524288), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53905,  0x0000031c,     0x4625,                                                                        movRegister: Set Reg 5 with value from Reg 4 (0x00000001), 0x0000031c, 0x0000031e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02d00000 (    47185920), 0x00046c00 (      289792), 0x00000013 (          19), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53906,  0x0000031e,     0x4095,  lslRegister: Set Reg 5 to Reg 5 (0x00000001) shifted by 19 (Value of Reg 2) to left (shiftResults.result = 0x00080000, shiftRes, 0x0000031e, 0x00000320, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02d00000 (    47185920), 0x00046c00 (      289792), 0x00000013 (          19), 0x00000001 (           1), 0x00000001 (           1), 0x00080000 (      524288), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53907,  0x00000320,     0x1940,                                                                     addRegisterT1: Add Reg 0 (0x02d00000) and Reg 5 (0x00080000), 0x00000320, 0x00000322, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02d80000 (    47710208), 0x00046c00 (      289792), 0x00000013 (          19), 0x00000001 (           1), 0x00000001 (           1), 0x00080000 (      524288), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53908,  0x00000322,     0x4615,                                                                        movRegister: Set Reg 5 with value from Reg 2 (0x00000013), 0x00000322, 0x00000324, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02d80000 (    47710208), 0x00046c00 (      289792), 0x00000013 (          19), 0x00000001 (           1), 0x00000001 (           1), 0x00000013 (          19), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53909,  0x00000324,     0x1e52,                                                               subImmediateT1: Subtract Reg 2 (0x00000013) minus valid 0x00000001, 0x00000324, 0x00000326, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02d80000 (    47710208), 0x00046c00 (      289792), 0x00000012 (          18), 0x00000001 (           1), 0x00000001 (           1), 0x00000013 (          19), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53910,  0x00000326,     0x2d00,                                                                       cmpImmediate: Subtract Reg 5 (0x00000013) minus 0x00000000, 0x00000326, 0x00000328, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02d80000 (    47710208), 0x00046c00 (      289792), 0x00000012 (          18), 0x00000001 (           1), 0x00000001 (           1), 0x00000013 (          19), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53911,  0x00000328,     0xdcf1,                                                                                       conditionalBranch: Branching to 0x0000030e, 0x00000328, 0x0000030e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02d80000 (    47710208), 0x00046c00 (      289792), 0x00000012 (          18), 0x00000001 (           1), 0x00000001 (           1), 0x00000013 (          19), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53912,  0x0000030e,     0x460d,                                                                        movRegister: Set Reg 5 with value from Reg 1 (0x00046c00), 0x0000030e, 0x00000310, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02d80000 (    47710208), 0x00046c00 (      289792), 0x00000012 (          18), 0x00000001 (           1), 0x00000001 (           1), 0x00046c00 (      289792), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53913,  0x00000310,     0x40d5,  lsrRegister: Set Reg 5 to Reg 5 (0x00046c00) shifted by 18 (Value of Reg 2) to left (shiftResults.result = 0x00000001, shiftRes, 0x00000310, 0x00000312, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02d80000 (    47710208), 0x00046c00 (      289792), 0x00000012 (          18), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53914,  0x00000312,     0x429d,                                                              cmpRegisterT1: Subtract Reg 5 (0x00000001) minus Reg 3 (0x00000001), 0x00000312, 0x00000314, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02d80000 (    47710208), 0x00046c00 (      289792), 0x00000012 (          18), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53915,  0x00000314,     0xd305,                                                                                   conditionalBranch: Not branching to 0x00000322, 0x00000314, 0x00000316, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02d80000 (    47710208), 0x00046c00 (      289792), 0x00000012 (          18), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53916,  0x00000316,     0x461d,                                                                        movRegister: Set Reg 5 with value from Reg 3 (0x00000001), 0x00000316, 0x00000318, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02d80000 (    47710208), 0x00046c00 (      289792), 0x00000012 (          18), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53917,  0x00000318,     0x4095,  lslRegister: Set Reg 5 to Reg 5 (0x00000001) shifted by 18 (Value of Reg 2) to left (shiftResults.result = 0x00040000, shiftRes, 0x00000318, 0x0000031a, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02d80000 (    47710208), 0x00046c00 (      289792), 0x00000012 (          18), 0x00000001 (           1), 0x00000001 (           1), 0x00040000 (      262144), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53918,  0x0000031a,     0x1b49,                                                                subRegister: Subtract Reg 1 (0x00046c00) minus Reg 5 (0x00040000), 0x0000031a, 0x0000031c, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02d80000 (    47710208), 0x00006c00 (       27648), 0x00000012 (          18), 0x00000001 (           1), 0x00000001 (           1), 0x00040000 (      262144), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53919,  0x0000031c,     0x4625,                                                                        movRegister: Set Reg 5 with value from Reg 4 (0x00000001), 0x0000031c, 0x0000031e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02d80000 (    47710208), 0x00006c00 (       27648), 0x00000012 (          18), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53920,  0x0000031e,     0x4095,  lslRegister: Set Reg 5 to Reg 5 (0x00000001) shifted by 18 (Value of Reg 2) to left (shiftResults.result = 0x00040000, shiftRes, 0x0000031e, 0x00000320, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02d80000 (    47710208), 0x00006c00 (       27648), 0x00000012 (          18), 0x00000001 (           1), 0x00000001 (           1), 0x00040000 (      262144), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53921,  0x00000320,     0x1940,                                                                     addRegisterT1: Add Reg 0 (0x02d80000) and Reg 5 (0x00040000), 0x00000320, 0x00000322, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x00000012 (          18), 0x00000001 (           1), 0x00000001 (           1), 0x00040000 (      262144), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53922,  0x00000322,     0x4615,                                                                        movRegister: Set Reg 5 with value from Reg 2 (0x00000012), 0x00000322, 0x00000324, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x00000012 (          18), 0x00000001 (           1), 0x00000001 (           1), 0x00000012 (          18), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53923,  0x00000324,     0x1e52,                                                               subImmediateT1: Subtract Reg 2 (0x00000012) minus valid 0x00000001, 0x00000324, 0x00000326, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x00000011 (          17), 0x00000001 (           1), 0x00000001 (           1), 0x00000012 (          18), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53924,  0x00000326,     0x2d00,                                                                       cmpImmediate: Subtract Reg 5 (0x00000012) minus 0x00000000, 0x00000326, 0x00000328, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x00000011 (          17), 0x00000001 (           1), 0x00000001 (           1), 0x00000012 (          18), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53925,  0x00000328,     0xdcf1,                                                                                       conditionalBranch: Branching to 0x0000030e, 0x00000328, 0x0000030e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x00000011 (          17), 0x00000001 (           1), 0x00000001 (           1), 0x00000012 (          18), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53926,  0x0000030e,     0x460d,                                                                        movRegister: Set Reg 5 with value from Reg 1 (0x00006c00), 0x0000030e, 0x00000310, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x00000011 (          17), 0x00000001 (           1), 0x00000001 (           1), 0x00006c00 (       27648), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53927,  0x00000310,     0x40d5,  lsrRegister: Set Reg 5 to Reg 5 (0x00006c00) shifted by 17 (Value of Reg 2) to left (shiftResults.result = 0x00000000, shiftRes, 0x00000310, 0x00000312, 0x10001bec, 0x000004a3, 0x41000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x00000011 (          17), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53928,  0x00000312,     0x429d,                                                              cmpRegisterT1: Subtract Reg 5 (0x00000000) minus Reg 3 (0x00000001), 0x00000312, 0x00000314, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x00000011 (          17), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53929,  0x00000314,     0xd305,                                                                                       conditionalBranch: Branching to 0x00000322, 0x00000314, 0x00000322, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x00000011 (          17), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53930,  0x00000322,     0x4615,                                                                        movRegister: Set Reg 5 with value from Reg 2 (0x00000011), 0x00000322, 0x00000324, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x00000011 (          17), 0x00000001 (           1), 0x00000001 (           1), 0x00000011 (          17), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53931,  0x00000324,     0x1e52,                                                               subImmediateT1: Subtract Reg 2 (0x00000011) minus valid 0x00000001, 0x00000324, 0x00000326, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x00000010 (          16), 0x00000001 (           1), 0x00000001 (           1), 0x00000011 (          17), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53932,  0x00000326,     0x2d00,                                                                       cmpImmediate: Subtract Reg 5 (0x00000011) minus 0x00000000, 0x00000326, 0x00000328, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x00000010 (          16), 0x00000001 (           1), 0x00000001 (           1), 0x00000011 (          17), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53933,  0x00000328,     0xdcf1,                                                                                       conditionalBranch: Branching to 0x0000030e, 0x00000328, 0x0000030e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x00000010 (          16), 0x00000001 (           1), 0x00000001 (           1), 0x00000011 (          17), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53934,  0x0000030e,     0x460d,                                                                        movRegister: Set Reg 5 with value from Reg 1 (0x00006c00), 0x0000030e, 0x00000310, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x00000010 (          16), 0x00000001 (           1), 0x00000001 (           1), 0x00006c00 (       27648), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53935,  0x00000310,     0x40d5,  lsrRegister: Set Reg 5 to Reg 5 (0x00006c00) shifted by 16 (Value of Reg 2) to left (shiftResults.result = 0x00000000, shiftRes, 0x00000310, 0x00000312, 0x10001bec, 0x000004a3, 0x41000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x00000010 (          16), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53936,  0x00000312,     0x429d,                                                              cmpRegisterT1: Subtract Reg 5 (0x00000000) minus Reg 3 (0x00000001), 0x00000312, 0x00000314, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x00000010 (          16), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53937,  0x00000314,     0xd305,                                                                                       conditionalBranch: Branching to 0x00000322, 0x00000314, 0x00000322, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x00000010 (          16), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53938,  0x00000322,     0x4615,                                                                        movRegister: Set Reg 5 with value from Reg 2 (0x00000010), 0x00000322, 0x00000324, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x00000010 (          16), 0x00000001 (           1), 0x00000001 (           1), 0x00000010 (          16), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53939,  0x00000324,     0x1e52,                                                               subImmediateT1: Subtract Reg 2 (0x00000010) minus valid 0x00000001, 0x00000324, 0x00000326, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x0000000f (          15), 0x00000001 (           1), 0x00000001 (           1), 0x00000010 (          16), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53940,  0x00000326,     0x2d00,                                                                       cmpImmediate: Subtract Reg 5 (0x00000010) minus 0x00000000, 0x00000326, 0x00000328, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x0000000f (          15), 0x00000001 (           1), 0x00000001 (           1), 0x00000010 (          16), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53941,  0x00000328,     0xdcf1,                                                                                       conditionalBranch: Branching to 0x0000030e, 0x00000328, 0x0000030e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x0000000f (          15), 0x00000001 (           1), 0x00000001 (           1), 0x00000010 (          16), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53942,  0x0000030e,     0x460d,                                                                        movRegister: Set Reg 5 with value from Reg 1 (0x00006c00), 0x0000030e, 0x00000310, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x0000000f (          15), 0x00000001 (           1), 0x00000001 (           1), 0x00006c00 (       27648), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53943,  0x00000310,     0x40d5,  lsrRegister: Set Reg 5 to Reg 5 (0x00006c00) shifted by 15 (Value of Reg 2) to left (shiftResults.result = 0x00000000, shiftRes, 0x00000310, 0x00000312, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x0000000f (          15), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53944,  0x00000312,     0x429d,                                                              cmpRegisterT1: Subtract Reg 5 (0x00000000) minus Reg 3 (0x00000001), 0x00000312, 0x00000314, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x0000000f (          15), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53945,  0x00000314,     0xd305,                                                                                       conditionalBranch: Branching to 0x00000322, 0x00000314, 0x00000322, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x0000000f (          15), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53946,  0x00000322,     0x4615,                                                                        movRegister: Set Reg 5 with value from Reg 2 (0x0000000f), 0x00000322, 0x00000324, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x0000000f (          15), 0x00000001 (           1), 0x00000001 (           1), 0x0000000f (          15), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53947,  0x00000324,     0x1e52,                                                               subImmediateT1: Subtract Reg 2 (0x0000000f) minus valid 0x00000001, 0x00000324, 0x00000326, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x0000000e (          14), 0x00000001 (           1), 0x00000001 (           1), 0x0000000f (          15), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53948,  0x00000326,     0x2d00,                                                                       cmpImmediate: Subtract Reg 5 (0x0000000f) minus 0x00000000, 0x00000326, 0x00000328, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x0000000e (          14), 0x00000001 (           1), 0x00000001 (           1), 0x0000000f (          15), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53949,  0x00000328,     0xdcf1,                                                                                       conditionalBranch: Branching to 0x0000030e, 0x00000328, 0x0000030e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x0000000e (          14), 0x00000001 (           1), 0x00000001 (           1), 0x0000000f (          15), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53950,  0x0000030e,     0x460d,                                                                        movRegister: Set Reg 5 with value from Reg 1 (0x00006c00), 0x0000030e, 0x00000310, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x0000000e (          14), 0x00000001 (           1), 0x00000001 (           1), 0x00006c00 (       27648), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53951,  0x00000310,     0x40d5,  lsrRegister: Set Reg 5 to Reg 5 (0x00006c00) shifted by 14 (Value of Reg 2) to left (shiftResults.result = 0x00000001, shiftRes, 0x00000310, 0x00000312, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x0000000e (          14), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53952,  0x00000312,     0x429d,                                                              cmpRegisterT1: Subtract Reg 5 (0x00000001) minus Reg 3 (0x00000001), 0x00000312, 0x00000314, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x0000000e (          14), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53953,  0x00000314,     0xd305,                                                                                   conditionalBranch: Not branching to 0x00000322, 0x00000314, 0x00000316, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x0000000e (          14), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53954,  0x00000316,     0x461d,                                                                        movRegister: Set Reg 5 with value from Reg 3 (0x00000001), 0x00000316, 0x00000318, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x0000000e (          14), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53955,  0x00000318,     0x4095,  lslRegister: Set Reg 5 to Reg 5 (0x00000001) shifted by 14 (Value of Reg 2) to left (shiftResults.result = 0x00004000, shiftRes, 0x00000318, 0x0000031a, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00006c00 (       27648), 0x0000000e (          14), 0x00000001 (           1), 0x00000001 (           1), 0x00004000 (       16384), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53956,  0x0000031a,     0x1b49,                                                                subRegister: Subtract Reg 1 (0x00006c00) minus Reg 5 (0x00004000), 0x0000031a, 0x0000031c, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00002c00 (       11264), 0x0000000e (          14), 0x00000001 (           1), 0x00000001 (           1), 0x00004000 (       16384), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53957,  0x0000031c,     0x4625,                                                                        movRegister: Set Reg 5 with value from Reg 4 (0x00000001), 0x0000031c, 0x0000031e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00002c00 (       11264), 0x0000000e (          14), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53958,  0x0000031e,     0x4095,  lslRegister: Set Reg 5 to Reg 5 (0x00000001) shifted by 14 (Value of Reg 2) to left (shiftResults.result = 0x00004000, shiftRes, 0x0000031e, 0x00000320, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02dc0000 (    47972352), 0x00002c00 (       11264), 0x0000000e (          14), 0x00000001 (           1), 0x00000001 (           1), 0x00004000 (       16384), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53959,  0x00000320,     0x1940,                                                                     addRegisterT1: Add Reg 0 (0x02dc0000) and Reg 5 (0x00004000), 0x00000320, 0x00000322, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02dc4000 (    47988736), 0x00002c00 (       11264), 0x0000000e (          14), 0x00000001 (           1), 0x00000001 (           1), 0x00004000 (       16384), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53960,  0x00000322,     0x4615,                                                                        movRegister: Set Reg 5 with value from Reg 2 (0x0000000e), 0x00000322, 0x00000324, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02dc4000 (    47988736), 0x00002c00 (       11264), 0x0000000e (          14), 0x00000001 (           1), 0x00000001 (           1), 0x0000000e (          14), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53961,  0x00000324,     0x1e52,                                                               subImmediateT1: Subtract Reg 2 (0x0000000e) minus valid 0x00000001, 0x00000324, 0x00000326, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc4000 (    47988736), 0x00002c00 (       11264), 0x0000000d (          13), 0x00000001 (           1), 0x00000001 (           1), 0x0000000e (          14), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53962,  0x00000326,     0x2d00,                                                                       cmpImmediate: Subtract Reg 5 (0x0000000e) minus 0x00000000, 0x00000326, 0x00000328, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc4000 (    47988736), 0x00002c00 (       11264), 0x0000000d (          13), 0x00000001 (           1), 0x00000001 (           1), 0x0000000e (          14), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53963,  0x00000328,     0xdcf1,                                                                                       conditionalBranch: Branching to 0x0000030e, 0x00000328, 0x0000030e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc4000 (    47988736), 0x00002c00 (       11264), 0x0000000d (          13), 0x00000001 (           1), 0x00000001 (           1), 0x0000000e (          14), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53964,  0x0000030e,     0x460d,                                                                        movRegister: Set Reg 5 with value from Reg 1 (0x00002c00), 0x0000030e, 0x00000310, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc4000 (    47988736), 0x00002c00 (       11264), 0x0000000d (          13), 0x00000001 (           1), 0x00000001 (           1), 0x00002c00 (       11264), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53965,  0x00000310,     0x40d5,  lsrRegister: Set Reg 5 to Reg 5 (0x00002c00) shifted by 13 (Value of Reg 2) to left (shiftResults.result = 0x00000001, shiftRes, 0x00000310, 0x00000312, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02dc4000 (    47988736), 0x00002c00 (       11264), 0x0000000d (          13), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53966,  0x00000312,     0x429d,                                                              cmpRegisterT1: Subtract Reg 5 (0x00000001) minus Reg 3 (0x00000001), 0x00000312, 0x00000314, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02dc4000 (    47988736), 0x00002c00 (       11264), 0x0000000d (          13), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53967,  0x00000314,     0xd305,                                                                                   conditionalBranch: Not branching to 0x00000322, 0x00000314, 0x00000316, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02dc4000 (    47988736), 0x00002c00 (       11264), 0x0000000d (          13), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53968,  0x00000316,     0x461d,                                                                        movRegister: Set Reg 5 with value from Reg 3 (0x00000001), 0x00000316, 0x00000318, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02dc4000 (    47988736), 0x00002c00 (       11264), 0x0000000d (          13), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53969,  0x00000318,     0x4095,  lslRegister: Set Reg 5 to Reg 5 (0x00000001) shifted by 13 (Value of Reg 2) to left (shiftResults.result = 0x00002000, shiftRes, 0x00000318, 0x0000031a, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02dc4000 (    47988736), 0x00002c00 (       11264), 0x0000000d (          13), 0x00000001 (           1), 0x00000001 (           1), 0x00002000 (        8192), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53970,  0x0000031a,     0x1b49,                                                                subRegister: Subtract Reg 1 (0x00002c00) minus Reg 5 (0x00002000), 0x0000031a, 0x0000031c, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc4000 (    47988736), 0x00000c00 (        3072), 0x0000000d (          13), 0x00000001 (           1), 0x00000001 (           1), 0x00002000 (        8192), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53971,  0x0000031c,     0x4625,                                                                        movRegister: Set Reg 5 with value from Reg 4 (0x00000001), 0x0000031c, 0x0000031e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc4000 (    47988736), 0x00000c00 (        3072), 0x0000000d (          13), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53972,  0x0000031e,     0x4095,  lslRegister: Set Reg 5 to Reg 5 (0x00000001) shifted by 13 (Value of Reg 2) to left (shiftResults.result = 0x00002000, shiftRes, 0x0000031e, 0x00000320, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02dc4000 (    47988736), 0x00000c00 (        3072), 0x0000000d (          13), 0x00000001 (           1), 0x00000001 (           1), 0x00002000 (        8192), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53973,  0x00000320,     0x1940,                                                                     addRegisterT1: Add Reg 0 (0x02dc4000) and Reg 5 (0x00002000), 0x00000320, 0x00000322, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02dc6000 (    47996928), 0x00000c00 (        3072), 0x0000000d (          13), 0x00000001 (           1), 0x00000001 (           1), 0x00002000 (        8192), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53974,  0x00000322,     0x4615,                                                                        movRegister: Set Reg 5 with value from Reg 2 (0x0000000d), 0x00000322, 0x00000324, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02dc6000 (    47996928), 0x00000c00 (        3072), 0x0000000d (          13), 0x00000001 (           1), 0x00000001 (           1), 0x0000000d (          13), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53975,  0x00000324,     0x1e52,                                                               subImmediateT1: Subtract Reg 2 (0x0000000d) minus valid 0x00000001, 0x00000324, 0x00000326, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6000 (    47996928), 0x00000c00 (        3072), 0x0000000c (          12), 0x00000001 (           1), 0x00000001 (           1), 0x0000000d (          13), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53976,  0x00000326,     0x2d00,                                                                       cmpImmediate: Subtract Reg 5 (0x0000000d) minus 0x00000000, 0x00000326, 0x00000328, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6000 (    47996928), 0x00000c00 (        3072), 0x0000000c (          12), 0x00000001 (           1), 0x00000001 (           1), 0x0000000d (          13), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53977,  0x00000328,     0xdcf1,                                                                                       conditionalBranch: Branching to 0x0000030e, 0x00000328, 0x0000030e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6000 (    47996928), 0x00000c00 (        3072), 0x0000000c (          12), 0x00000001 (           1), 0x00000001 (           1), 0x0000000d (          13), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53978,  0x0000030e,     0x460d,                                                                        movRegister: Set Reg 5 with value from Reg 1 (0x00000c00), 0x0000030e, 0x00000310, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6000 (    47996928), 0x00000c00 (        3072), 0x0000000c (          12), 0x00000001 (           1), 0x00000001 (           1), 0x00000c00 (        3072), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53979,  0x00000310,     0x40d5,  lsrRegister: Set Reg 5 to Reg 5 (0x00000c00) shifted by 12 (Value of Reg 2) to left (shiftResults.result = 0x00000000, shiftRes, 0x00000310, 0x00000312, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02dc6000 (    47996928), 0x00000c00 (        3072), 0x0000000c (          12), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53980,  0x00000312,     0x429d,                                                              cmpRegisterT1: Subtract Reg 5 (0x00000000) minus Reg 3 (0x00000001), 0x00000312, 0x00000314, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc6000 (    47996928), 0x00000c00 (        3072), 0x0000000c (          12), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53981,  0x00000314,     0xd305,                                                                                       conditionalBranch: Branching to 0x00000322, 0x00000314, 0x00000322, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc6000 (    47996928), 0x00000c00 (        3072), 0x0000000c (          12), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53982,  0x00000322,     0x4615,                                                                        movRegister: Set Reg 5 with value from Reg 2 (0x0000000c), 0x00000322, 0x00000324, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc6000 (    47996928), 0x00000c00 (        3072), 0x0000000c (          12), 0x00000001 (           1), 0x00000001 (           1), 0x0000000c (          12), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53983,  0x00000324,     0x1e52,                                                               subImmediateT1: Subtract Reg 2 (0x0000000c) minus valid 0x00000001, 0x00000324, 0x00000326, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6000 (    47996928), 0x00000c00 (        3072), 0x0000000b (          11), 0x00000001 (           1), 0x00000001 (           1), 0x0000000c (          12), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53984,  0x00000326,     0x2d00,                                                                       cmpImmediate: Subtract Reg 5 (0x0000000c) minus 0x00000000, 0x00000326, 0x00000328, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6000 (    47996928), 0x00000c00 (        3072), 0x0000000b (          11), 0x00000001 (           1), 0x00000001 (           1), 0x0000000c (          12), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53985,  0x00000328,     0xdcf1,                                                                                       conditionalBranch: Branching to 0x0000030e, 0x00000328, 0x0000030e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6000 (    47996928), 0x00000c00 (        3072), 0x0000000b (          11), 0x00000001 (           1), 0x00000001 (           1), 0x0000000c (          12), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53986,  0x0000030e,     0x460d,                                                                        movRegister: Set Reg 5 with value from Reg 1 (0x00000c00), 0x0000030e, 0x00000310, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6000 (    47996928), 0x00000c00 (        3072), 0x0000000b (          11), 0x00000001 (           1), 0x00000001 (           1), 0x00000c00 (        3072), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53987,  0x00000310,     0x40d5,  lsrRegister: Set Reg 5 to Reg 5 (0x00000c00) shifted by 11 (Value of Reg 2) to left (shiftResults.result = 0x00000001, shiftRes, 0x00000310, 0x00000312, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6000 (    47996928), 0x00000c00 (        3072), 0x0000000b (          11), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53988,  0x00000312,     0x429d,                                                              cmpRegisterT1: Subtract Reg 5 (0x00000001) minus Reg 3 (0x00000001), 0x00000312, 0x00000314, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02dc6000 (    47996928), 0x00000c00 (        3072), 0x0000000b (          11), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53989,  0x00000314,     0xd305,                                                                                   conditionalBranch: Not branching to 0x00000322, 0x00000314, 0x00000316, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02dc6000 (    47996928), 0x00000c00 (        3072), 0x0000000b (          11), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53990,  0x00000316,     0x461d,                                                                        movRegister: Set Reg 5 with value from Reg 3 (0x00000001), 0x00000316, 0x00000318, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02dc6000 (    47996928), 0x00000c00 (        3072), 0x0000000b (          11), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53991,  0x00000318,     0x4095,  lslRegister: Set Reg 5 to Reg 5 (0x00000001) shifted by 11 (Value of Reg 2) to left (shiftResults.result = 0x00000800, shiftRes, 0x00000318, 0x0000031a, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02dc6000 (    47996928), 0x00000c00 (        3072), 0x0000000b (          11), 0x00000001 (           1), 0x00000001 (           1), 0x00000800 (        2048), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53992,  0x0000031a,     0x1b49,                                                                subRegister: Subtract Reg 1 (0x00000c00) minus Reg 5 (0x00000800), 0x0000031a, 0x0000031c, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6000 (    47996928), 0x00000400 (        1024), 0x0000000b (          11), 0x00000001 (           1), 0x00000001 (           1), 0x00000800 (        2048), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53993,  0x0000031c,     0x4625,                                                                        movRegister: Set Reg 5 with value from Reg 4 (0x00000001), 0x0000031c, 0x0000031e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6000 (    47996928), 0x00000400 (        1024), 0x0000000b (          11), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53994,  0x0000031e,     0x4095,  lslRegister: Set Reg 5 to Reg 5 (0x00000001) shifted by 11 (Value of Reg 2) to left (shiftResults.result = 0x00000800, shiftRes, 0x0000031e, 0x00000320, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02dc6000 (    47996928), 0x00000400 (        1024), 0x0000000b (          11), 0x00000001 (           1), 0x00000001 (           1), 0x00000800 (        2048), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53995,  0x00000320,     0x1940,                                                                     addRegisterT1: Add Reg 0 (0x02dc6000) and Reg 5 (0x00000800), 0x00000320, 0x00000322, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02dc6800 (    47998976), 0x00000400 (        1024), 0x0000000b (          11), 0x00000001 (           1), 0x00000001 (           1), 0x00000800 (        2048), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53996,  0x00000322,     0x4615,                                                                        movRegister: Set Reg 5 with value from Reg 2 (0x0000000b), 0x00000322, 0x00000324, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02dc6800 (    47998976), 0x00000400 (        1024), 0x0000000b (          11), 0x00000001 (           1), 0x00000001 (           1), 0x0000000b (          11), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53997,  0x00000324,     0x1e52,                                                               subImmediateT1: Subtract Reg 2 (0x0000000b) minus valid 0x00000001, 0x00000324, 0x00000326, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6800 (    47998976), 0x00000400 (        1024), 0x0000000a (          10), 0x00000001 (           1), 0x00000001 (           1), 0x0000000b (          11), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53998,  0x00000326,     0x2d00,                                                                       cmpImmediate: Subtract Reg 5 (0x0000000b) minus 0x00000000, 0x00000326, 0x00000328, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6800 (    47998976), 0x00000400 (        1024), 0x0000000a (          10), 0x00000001 (           1), 0x00000001 (           1), 0x0000000b (          11), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     53999,  0x00000328,     0xdcf1,                                                                                       conditionalBranch: Branching to 0x0000030e, 0x00000328, 0x0000030e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6800 (    47998976), 0x00000400 (        1024), 0x0000000a (          10), 0x00000001 (           1), 0x00000001 (           1), 0x0000000b (          11), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54000,  0x0000030e,     0x460d,                                                                        movRegister: Set Reg 5 with value from Reg 1 (0x00000400), 0x0000030e, 0x00000310, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6800 (    47998976), 0x00000400 (        1024), 0x0000000a (          10), 0x00000001 (           1), 0x00000001 (           1), 0x00000400 (        1024), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54001,  0x00000310,     0x40d5,  lsrRegister: Set Reg 5 to Reg 5 (0x00000400) shifted by 10 (Value of Reg 2) to left (shiftResults.result = 0x00000001, shiftRes, 0x00000310, 0x00000312, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02dc6800 (    47998976), 0x00000400 (        1024), 0x0000000a (          10), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54002,  0x00000312,     0x429d,                                                              cmpRegisterT1: Subtract Reg 5 (0x00000001) minus Reg 3 (0x00000001), 0x00000312, 0x00000314, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02dc6800 (    47998976), 0x00000400 (        1024), 0x0000000a (          10), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54003,  0x00000314,     0xd305,                                                                                   conditionalBranch: Not branching to 0x00000322, 0x00000314, 0x00000316, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02dc6800 (    47998976), 0x00000400 (        1024), 0x0000000a (          10), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54004,  0x00000316,     0x461d,                                                                        movRegister: Set Reg 5 with value from Reg 3 (0x00000001), 0x00000316, 0x00000318, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02dc6800 (    47998976), 0x00000400 (        1024), 0x0000000a (          10), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54005,  0x00000318,     0x4095,  lslRegister: Set Reg 5 to Reg 5 (0x00000001) shifted by 10 (Value of Reg 2) to left (shiftResults.result = 0x00000400, shiftRes, 0x00000318, 0x0000031a, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02dc6800 (    47998976), 0x00000400 (        1024), 0x0000000a (          10), 0x00000001 (           1), 0x00000001 (           1), 0x00000400 (        1024), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54006,  0x0000031a,     0x1b49,                                                                subRegister: Subtract Reg 1 (0x00000400) minus Reg 5 (0x00000400), 0x0000031a, 0x0000031c, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02dc6800 (    47998976), 0x00000000 (           0), 0x0000000a (          10), 0x00000001 (           1), 0x00000001 (           1), 0x00000400 (        1024), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54007,  0x0000031c,     0x4625,                                                                        movRegister: Set Reg 5 with value from Reg 4 (0x00000001), 0x0000031c, 0x0000031e, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02dc6800 (    47998976), 0x00000000 (           0), 0x0000000a (          10), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54008,  0x0000031e,     0x4095,  lslRegister: Set Reg 5 to Reg 5 (0x00000001) shifted by 10 (Value of Reg 2) to left (shiftResults.result = 0x00000400, shiftRes, 0x0000031e, 0x00000320, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02dc6800 (    47998976), 0x00000000 (           0), 0x0000000a (          10), 0x00000001 (           1), 0x00000001 (           1), 0x00000400 (        1024), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54009,  0x00000320,     0x1940,                                                                     addRegisterT1: Add Reg 0 (0x02dc6800) and Reg 5 (0x00000400), 0x00000320, 0x00000322, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x0000000a (          10), 0x00000001 (           1), 0x00000001 (           1), 0x00000400 (        1024), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54010,  0x00000322,     0x4615,                                                                        movRegister: Set Reg 5 with value from Reg 2 (0x0000000a), 0x00000322, 0x00000324, 0x10001bec, 0x000004a3, 0x01000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x0000000a (          10), 0x00000001 (           1), 0x00000001 (           1), 0x0000000a (          10), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54011,  0x00000324,     0x1e52,                                                               subImmediateT1: Subtract Reg 2 (0x0000000a) minus valid 0x00000001, 0x00000324, 0x00000326, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000009 (           9), 0x00000001 (           1), 0x00000001 (           1), 0x0000000a (          10), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54012,  0x00000326,     0x2d00,                                                                       cmpImmediate: Subtract Reg 5 (0x0000000a) minus 0x00000000, 0x00000326, 0x00000328, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000009 (           9), 0x00000001 (           1), 0x00000001 (           1), 0x0000000a (          10), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54013,  0x00000328,     0xdcf1,                                                                                       conditionalBranch: Branching to 0x0000030e, 0x00000328, 0x0000030e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000009 (           9), 0x00000001 (           1), 0x00000001 (           1), 0x0000000a (          10), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54014,  0x0000030e,     0x460d,                                                                        movRegister: Set Reg 5 with value from Reg 1 (0x00000000), 0x0000030e, 0x00000310, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000009 (           9), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54015,  0x00000310,     0x40d5,  lsrRegister: Set Reg 5 to Reg 5 (0x00000000) shifted by 9 (Value of Reg 2) to left (shiftResults.result = 0x00000000, shiftResu, 0x00000310, 0x00000312, 0x10001bec, 0x000004a3, 0x41000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000009 (           9), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54016,  0x00000312,     0x429d,                                                              cmpRegisterT1: Subtract Reg 5 (0x00000000) minus Reg 3 (0x00000001), 0x00000312, 0x00000314, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000009 (           9), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54017,  0x00000314,     0xd305,                                                                                       conditionalBranch: Branching to 0x00000322, 0x00000314, 0x00000322, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000009 (           9), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54018,  0x00000322,     0x4615,                                                                        movRegister: Set Reg 5 with value from Reg 2 (0x00000009), 0x00000322, 0x00000324, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000009 (           9), 0x00000001 (           1), 0x00000001 (           1), 0x00000009 (           9), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54019,  0x00000324,     0x1e52,                                                               subImmediateT1: Subtract Reg 2 (0x00000009) minus valid 0x00000001, 0x00000324, 0x00000326, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000008 (           8), 0x00000001 (           1), 0x00000001 (           1), 0x00000009 (           9), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54020,  0x00000326,     0x2d00,                                                                       cmpImmediate: Subtract Reg 5 (0x00000009) minus 0x00000000, 0x00000326, 0x00000328, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000008 (           8), 0x00000001 (           1), 0x00000001 (           1), 0x00000009 (           9), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54021,  0x00000328,     0xdcf1,                                                                                       conditionalBranch: Branching to 0x0000030e, 0x00000328, 0x0000030e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000008 (           8), 0x00000001 (           1), 0x00000001 (           1), 0x00000009 (           9), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54022,  0x0000030e,     0x460d,                                                                        movRegister: Set Reg 5 with value from Reg 1 (0x00000000), 0x0000030e, 0x00000310, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000008 (           8), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54023,  0x00000310,     0x40d5,  lsrRegister: Set Reg 5 to Reg 5 (0x00000000) shifted by 8 (Value of Reg 2) to left (shiftResults.result = 0x00000000, shiftResu, 0x00000310, 0x00000312, 0x10001bec, 0x000004a3, 0x41000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000008 (           8), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54024,  0x00000312,     0x429d,                                                              cmpRegisterT1: Subtract Reg 5 (0x00000000) minus Reg 3 (0x00000001), 0x00000312, 0x00000314, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000008 (           8), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54025,  0x00000314,     0xd305,                                                                                       conditionalBranch: Branching to 0x00000322, 0x00000314, 0x00000322, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000008 (           8), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54026,  0x00000322,     0x4615,                                                                        movRegister: Set Reg 5 with value from Reg 2 (0x00000008), 0x00000322, 0x00000324, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000008 (           8), 0x00000001 (           1), 0x00000001 (           1), 0x00000008 (           8), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54027,  0x00000324,     0x1e52,                                                               subImmediateT1: Subtract Reg 2 (0x00000008) minus valid 0x00000001, 0x00000324, 0x00000326, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000007 (           7), 0x00000001 (           1), 0x00000001 (           1), 0x00000008 (           8), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54028,  0x00000326,     0x2d00,                                                                       cmpImmediate: Subtract Reg 5 (0x00000008) minus 0x00000000, 0x00000326, 0x00000328, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000007 (           7), 0x00000001 (           1), 0x00000001 (           1), 0x00000008 (           8), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54029,  0x00000328,     0xdcf1,                                                                                       conditionalBranch: Branching to 0x0000030e, 0x00000328, 0x0000030e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000007 (           7), 0x00000001 (           1), 0x00000001 (           1), 0x00000008 (           8), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54030,  0x0000030e,     0x460d,                                                                        movRegister: Set Reg 5 with value from Reg 1 (0x00000000), 0x0000030e, 0x00000310, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000007 (           7), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54031,  0x00000310,     0x40d5,  lsrRegister: Set Reg 5 to Reg 5 (0x00000000) shifted by 7 (Value of Reg 2) to left (shiftResults.result = 0x00000000, shiftResu, 0x00000310, 0x00000312, 0x10001bec, 0x000004a3, 0x41000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000007 (           7), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54032,  0x00000312,     0x429d,                                                              cmpRegisterT1: Subtract Reg 5 (0x00000000) minus Reg 3 (0x00000001), 0x00000312, 0x00000314, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000007 (           7), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54033,  0x00000314,     0xd305,                                                                                       conditionalBranch: Branching to 0x00000322, 0x00000314, 0x00000322, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000007 (           7), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54034,  0x00000322,     0x4615,                                                                        movRegister: Set Reg 5 with value from Reg 2 (0x00000007), 0x00000322, 0x00000324, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000007 (           7), 0x00000001 (           1), 0x00000001 (           1), 0x00000007 (           7), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54035,  0x00000324,     0x1e52,                                                               subImmediateT1: Subtract Reg 2 (0x00000007) minus valid 0x00000001, 0x00000324, 0x00000326, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000006 (           6), 0x00000001 (           1), 0x00000001 (           1), 0x00000007 (           7), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54036,  0x00000326,     0x2d00,                                                                       cmpImmediate: Subtract Reg 5 (0x00000007) minus 0x00000000, 0x00000326, 0x00000328, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000006 (           6), 0x00000001 (           1), 0x00000001 (           1), 0x00000007 (           7), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54037,  0x00000328,     0xdcf1,                                                                                       conditionalBranch: Branching to 0x0000030e, 0x00000328, 0x0000030e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000006 (           6), 0x00000001 (           1), 0x00000001 (           1), 0x00000007 (           7), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54038,  0x0000030e,     0x460d,                                                                        movRegister: Set Reg 5 with value from Reg 1 (0x00000000), 0x0000030e, 0x00000310, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000006 (           6), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54039,  0x00000310,     0x40d5,  lsrRegister: Set Reg 5 to Reg 5 (0x00000000) shifted by 6 (Value of Reg 2) to left (shiftResults.result = 0x00000000, shiftResu, 0x00000310, 0x00000312, 0x10001bec, 0x000004a3, 0x41000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000006 (           6), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54040,  0x00000312,     0x429d,                                                              cmpRegisterT1: Subtract Reg 5 (0x00000000) minus Reg 3 (0x00000001), 0x00000312, 0x00000314, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000006 (           6), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54041,  0x00000314,     0xd305,                                                                                       conditionalBranch: Branching to 0x00000322, 0x00000314, 0x00000322, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000006 (           6), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54042,  0x00000322,     0x4615,                                                                        movRegister: Set Reg 5 with value from Reg 2 (0x00000006), 0x00000322, 0x00000324, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000006 (           6), 0x00000001 (           1), 0x00000001 (           1), 0x00000006 (           6), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54043,  0x00000324,     0x1e52,                                                               subImmediateT1: Subtract Reg 2 (0x00000006) minus valid 0x00000001, 0x00000324, 0x00000326, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000005 (           5), 0x00000001 (           1), 0x00000001 (           1), 0x00000006 (           6), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54044,  0x00000326,     0x2d00,                                                                       cmpImmediate: Subtract Reg 5 (0x00000006) minus 0x00000000, 0x00000326, 0x00000328, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000005 (           5), 0x00000001 (           1), 0x00000001 (           1), 0x00000006 (           6), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54045,  0x00000328,     0xdcf1,                                                                                       conditionalBranch: Branching to 0x0000030e, 0x00000328, 0x0000030e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000005 (           5), 0x00000001 (           1), 0x00000001 (           1), 0x00000006 (           6), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54046,  0x0000030e,     0x460d,                                                                        movRegister: Set Reg 5 with value from Reg 1 (0x00000000), 0x0000030e, 0x00000310, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000005 (           5), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54047,  0x00000310,     0x40d5,  lsrRegister: Set Reg 5 to Reg 5 (0x00000000) shifted by 5 (Value of Reg 2) to left (shiftResults.result = 0x00000000, shiftResu, 0x00000310, 0x00000312, 0x10001bec, 0x000004a3, 0x41000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000005 (           5), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54048,  0x00000312,     0x429d,                                                              cmpRegisterT1: Subtract Reg 5 (0x00000000) minus Reg 3 (0x00000001), 0x00000312, 0x00000314, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000005 (           5), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54049,  0x00000314,     0xd305,                                                                                       conditionalBranch: Branching to 0x00000322, 0x00000314, 0x00000322, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000005 (           5), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54050,  0x00000322,     0x4615,                                                                        movRegister: Set Reg 5 with value from Reg 2 (0x00000005), 0x00000322, 0x00000324, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000005 (           5), 0x00000001 (           1), 0x00000001 (           1), 0x00000005 (           5), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54051,  0x00000324,     0x1e52,                                                               subImmediateT1: Subtract Reg 2 (0x00000005) minus valid 0x00000001, 0x00000324, 0x00000326, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000004 (           4), 0x00000001 (           1), 0x00000001 (           1), 0x00000005 (           5), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54052,  0x00000326,     0x2d00,                                                                       cmpImmediate: Subtract Reg 5 (0x00000005) minus 0x00000000, 0x00000326, 0x00000328, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000004 (           4), 0x00000001 (           1), 0x00000001 (           1), 0x00000005 (           5), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54053,  0x00000328,     0xdcf1,                                                                                       conditionalBranch: Branching to 0x0000030e, 0x00000328, 0x0000030e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000004 (           4), 0x00000001 (           1), 0x00000001 (           1), 0x00000005 (           5), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54054,  0x0000030e,     0x460d,                                                                        movRegister: Set Reg 5 with value from Reg 1 (0x00000000), 0x0000030e, 0x00000310, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000004 (           4), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54055,  0x00000310,     0x40d5,  lsrRegister: Set Reg 5 to Reg 5 (0x00000000) shifted by 4 (Value of Reg 2) to left (shiftResults.result = 0x00000000, shiftResu, 0x00000310, 0x00000312, 0x10001bec, 0x000004a3, 0x41000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000004 (           4), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54056,  0x00000312,     0x429d,                                                              cmpRegisterT1: Subtract Reg 5 (0x00000000) minus Reg 3 (0x00000001), 0x00000312, 0x00000314, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000004 (           4), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54057,  0x00000314,     0xd305,                                                                                       conditionalBranch: Branching to 0x00000322, 0x00000314, 0x00000322, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000004 (           4), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54058,  0x00000322,     0x4615,                                                                        movRegister: Set Reg 5 with value from Reg 2 (0x00000004), 0x00000322, 0x00000324, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000004 (           4), 0x00000001 (           1), 0x00000001 (           1), 0x00000004 (           4), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54059,  0x00000324,     0x1e52,                                                               subImmediateT1: Subtract Reg 2 (0x00000004) minus valid 0x00000001, 0x00000324, 0x00000326, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000003 (           3), 0x00000001 (           1), 0x00000001 (           1), 0x00000004 (           4), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54060,  0x00000326,     0x2d00,                                                                       cmpImmediate: Subtract Reg 5 (0x00000004) minus 0x00000000, 0x00000326, 0x00000328, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000003 (           3), 0x00000001 (           1), 0x00000001 (           1), 0x00000004 (           4), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54061,  0x00000328,     0xdcf1,                                                                                       conditionalBranch: Branching to 0x0000030e, 0x00000328, 0x0000030e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000003 (           3), 0x00000001 (           1), 0x00000001 (           1), 0x00000004 (           4), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54062,  0x0000030e,     0x460d,                                                                        movRegister: Set Reg 5 with value from Reg 1 (0x00000000), 0x0000030e, 0x00000310, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000003 (           3), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54063,  0x00000310,     0x40d5,  lsrRegister: Set Reg 5 to Reg 5 (0x00000000) shifted by 3 (Value of Reg 2) to left (shiftResults.result = 0x00000000, shiftResu, 0x00000310, 0x00000312, 0x10001bec, 0x000004a3, 0x41000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000003 (           3), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54064,  0x00000312,     0x429d,                                                              cmpRegisterT1: Subtract Reg 5 (0x00000000) minus Reg 3 (0x00000001), 0x00000312, 0x00000314, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000003 (           3), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54065,  0x00000314,     0xd305,                                                                                       conditionalBranch: Branching to 0x00000322, 0x00000314, 0x00000322, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000003 (           3), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54066,  0x00000322,     0x4615,                                                                        movRegister: Set Reg 5 with value from Reg 2 (0x00000003), 0x00000322, 0x00000324, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000003 (           3), 0x00000001 (           1), 0x00000001 (           1), 0x00000003 (           3), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54067,  0x00000324,     0x1e52,                                                               subImmediateT1: Subtract Reg 2 (0x00000003) minus valid 0x00000001, 0x00000324, 0x00000326, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000002 (           2), 0x00000001 (           1), 0x00000001 (           1), 0x00000003 (           3), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54068,  0x00000326,     0x2d00,                                                                       cmpImmediate: Subtract Reg 5 (0x00000003) minus 0x00000000, 0x00000326, 0x00000328, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000002 (           2), 0x00000001 (           1), 0x00000001 (           1), 0x00000003 (           3), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54069,  0x00000328,     0xdcf1,                                                                                       conditionalBranch: Branching to 0x0000030e, 0x00000328, 0x0000030e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000002 (           2), 0x00000001 (           1), 0x00000001 (           1), 0x00000003 (           3), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54070,  0x0000030e,     0x460d,                                                                        movRegister: Set Reg 5 with value from Reg 1 (0x00000000), 0x0000030e, 0x00000310, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000002 (           2), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54071,  0x00000310,     0x40d5,  lsrRegister: Set Reg 5 to Reg 5 (0x00000000) shifted by 2 (Value of Reg 2) to left (shiftResults.result = 0x00000000, shiftResu, 0x00000310, 0x00000312, 0x10001bec, 0x000004a3, 0x41000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000002 (           2), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54072,  0x00000312,     0x429d,                                                              cmpRegisterT1: Subtract Reg 5 (0x00000000) minus Reg 3 (0x00000001), 0x00000312, 0x00000314, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000002 (           2), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54073,  0x00000314,     0xd305,                                                                                       conditionalBranch: Branching to 0x00000322, 0x00000314, 0x00000322, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000002 (           2), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54074,  0x00000322,     0x4615,                                                                        movRegister: Set Reg 5 with value from Reg 2 (0x00000002), 0x00000322, 0x00000324, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000002 (           2), 0x00000001 (           1), 0x00000001 (           1), 0x00000002 (           2), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54075,  0x00000324,     0x1e52,                                                               subImmediateT1: Subtract Reg 2 (0x00000002) minus valid 0x00000001, 0x00000324, 0x00000326, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x00000002 (           2), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54076,  0x00000326,     0x2d00,                                                                       cmpImmediate: Subtract Reg 5 (0x00000002) minus 0x00000000, 0x00000326, 0x00000328, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x00000002 (           2), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54077,  0x00000328,     0xdcf1,                                                                                       conditionalBranch: Branching to 0x0000030e, 0x00000328, 0x0000030e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x00000002 (           2), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54078,  0x0000030e,     0x460d,                                                                        movRegister: Set Reg 5 with value from Reg 1 (0x00000000), 0x0000030e, 0x00000310, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54079,  0x00000310,     0x40d5,  lsrRegister: Set Reg 5 to Reg 5 (0x00000000) shifted by 1 (Value of Reg 2) to left (shiftResults.result = 0x00000000, shiftResu, 0x00000310, 0x00000312, 0x10001bec, 0x000004a3, 0x41000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54080,  0x00000312,     0x429d,                                                              cmpRegisterT1: Subtract Reg 5 (0x00000000) minus Reg 3 (0x00000001), 0x00000312, 0x00000314, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54081,  0x00000314,     0xd305,                                                                                       conditionalBranch: Branching to 0x00000322, 0x00000314, 0x00000322, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54082,  0x00000322,     0x4615,                                                                        movRegister: Set Reg 5 with value from Reg 2 (0x00000001), 0x00000322, 0x00000324, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54083,  0x00000324,     0x1e52,                                                               subImmediateT1: Subtract Reg 2 (0x00000001) minus valid 0x00000001, 0x00000324, 0x00000326, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000000 (           0), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54084,  0x00000326,     0x2d00,                                                                       cmpImmediate: Subtract Reg 5 (0x00000001) minus 0x00000000, 0x00000326, 0x00000328, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000000 (           0), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54085,  0x00000328,     0xdcf1,                                                                                       conditionalBranch: Branching to 0x0000030e, 0x00000328, 0x0000030e, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000000 (           0), 0x00000001 (           1), 0x00000001 (           1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54086,  0x0000030e,     0x460d,                                                                        movRegister: Set Reg 5 with value from Reg 1 (0x00000000), 0x0000030e, 0x00000310, 0x10001bec, 0x000004a3, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000000 (           0), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54087,  0x00000310,     0x40d5,  lsrRegister: Set Reg 5 to Reg 5 (0x00000000) shifted by 0 (Value of Reg 2) to left (shiftResults.result = 0x00000000, shiftResu, 0x00000310, 0x00000312, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000000 (           0), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54088,  0x00000312,     0x429d,                                                              cmpRegisterT1: Subtract Reg 5 (0x00000000) minus Reg 3 (0x00000001), 0x00000312, 0x00000314, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000000 (           0), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54089,  0x00000314,     0xd305,                                                                                       conditionalBranch: Branching to 0x00000322, 0x00000314, 0x00000322, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000000 (           0), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54090,  0x00000322,     0x4615,                                                                        movRegister: Set Reg 5 with value from Reg 2 (0x00000000), 0x00000322, 0x00000324, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0x00000000 (           0), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54091,  0x00000324,     0x1e52,                                                               subImmediateT1: Subtract Reg 2 (0x00000000) minus valid 0x00000001, 0x00000324, 0x00000326, 0x10001bec, 0x000004a3, 0x81000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0xffffffff (          -1), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54092,  0x00000326,     0x2d00,                                                                       cmpImmediate: Subtract Reg 5 (0x00000000) minus 0x00000000, 0x00000326, 0x00000328, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0xffffffff (          -1), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54093,  0x00000328,     0xdcf1,                                                                                   conditionalBranch: Not branching to 0x0000030e, 0x00000328, 0x0000032a, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0xffffffff (          -1), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54094,  0x10001bec, 0x0000185c,                                                                           alignedMemRead: 8 kB SRAM0 (0x10001bec --> 0x0000185c), 0x0000032a, 0x0000032c, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0xffffffff (          -1), 0x00000001 (           1), 0x00000001 (           1), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54095,  0x10001bf0, 0x00000001,                                                                           alignedMemRead: 8 kB SRAM0 (0x10001bf0 --> 0x00000001), 0x0000032a, 0x0000032c, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0xffffffff (          -1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54096,  0x10001bf4, 0x000004a3,                                                                           alignedMemRead: 8 kB SRAM0 (0x10001bf4 --> 0x000004a3), 0x0000032a, 0x0000032c, 0x10001bec, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0xffffffff (          -1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54097,  0x0000032a,     0xbd30,                                                                                                                              pop, 0x0000032a, 0x000004a2, 0x10001bf8, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0xffffffff (          -1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54098,  0x10001bf8, 0x0000185c,                                                                           alignedMemRead: 8 kB SRAM0 (0x10001bf8 --> 0x0000185c), 0x000004a2, 0x000004a4, 0x10001bf8, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0xffffffff (          -1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54099,  0x10001bfc, 0x00000fd7,                                                                           alignedMemRead: 8 kB SRAM0 (0x10001bfc --> 0x00000fd7), 0x000004a2, 0x000004a4, 0x10001bf8, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0xffffffff (          -1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54100,  0x000004a2,     0xbd10,                                                                                                                              pop, 0x000004a2, 0x00000fd6, 0x10001c00, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0xffffffff (          -1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54101,  0x00000fdc, 0x10000260,                                                                 alignedMemRead: 128 kB on-chip flash (0x00000fdc --> 0x10000260), 0x00000fd6, 0x00000fd8, 0x10001c00, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x00000000 (           0), 0xffffffff (          -1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54102,  0x00000fd6,     0x4901,                                                            ldrLiteral: Set Reg 1 with value 0x10000260 (from address 0x00000fdc), 0x00000fd6, 0x00000fd8, 0x10001c00, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x10000260 (   268436064), 0xffffffff (          -1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54103,  0x10000260, 0x02dc6c00,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10000260 <-- 0x02dc6c00), 0x00000fd8, 0x00000fda, 0x10001c00, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x10000260 (   268436064), 0xffffffff (          -1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54104,  0x00000fd8,     0x6008,                        strImmediateT1: Write value of Reg 0 (0x02dc6c00) to address 0x10000260 (Reg 1 (0x10000260) + 0x00000000), 0x00000fd8, 0x00000fda, 0x10001c00, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x10000260 (   268436064), 0xffffffff (          -1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54105,  0x10001c00, 0x0000185c,                                                                           alignedMemRead: 8 kB SRAM0 (0x10001c00 --> 0x0000185c), 0x00000fda, 0x00000fdc, 0x10001c00, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x10000260 (   268436064), 0xffffffff (          -1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54106,  0x10001c04, 0x00001553,                                                                           alignedMemRead: 8 kB SRAM0 (0x10001c04 --> 0x00001553), 0x00000fda, 0x00000fdc, 0x10001c00, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x10000260 (   268436064), 0xffffffff (          -1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54107,  0x00000fda,     0xbd10,                                                                                                                              pop, 0x00000fda, 0x00001552, 0x10001c08, 0x000004a3, 0x61000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x10000260 (   268436064), 0xffffffff (          -1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54108,  0x00001552, 0xfbd7f7ff,                                                                                bl: Branch to 0x00001557 (Link Reg is 0x00000d04), 0x00001552, 0x00000d04, 0x10001c08, 0x00001557, 0x61000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x10000260 (   268436064), 0xffffffff (          -1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54109,  0x10001c00, 0x0000185c,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001c00 <-- 0x0000185c), 0x00000d04, 0x00000d06, 0x10001c08, 0x00001557, 0x61000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x10000260 (   268436064), 0xffffffff (          -1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54110,  0x10001c04, 0x00001557,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001c04 <-- 0x00001557), 0x00000d04, 0x00000d06, 0x10001c08, 0x00001557, 0x61000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x10000260 (   268436064), 0xffffffff (          -1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54111,  0x00000d04,     0xb510,                                                                                                                             push, 0x00000d04, 0x00000d06, 0x10001c00, 0x00001557, 0x61000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x10000260 (   268436064), 0xffffffff (          -1), 0x00000001 (           1), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54112,  0x00000d06,     0x2208,                                                                                    movImmediate: Set Reg 2 with value 0x00000008, 0x00000d06, 0x00000d08, 0x10001c00, 0x00001557, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x10000260 (   268436064), 0x00000008 (           8), 0x00000001 (           1), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54113,  0x00000d28, 0x10000254,                                                                 alignedMemRead: 128 kB on-chip flash (0x00000d28 --> 0x10000254), 0x00000d08, 0x00000d0a, 0x10001c00, 0x00001557, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x10000260 (   268436064), 0x00000008 (           8), 0x00000001 (           1), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54114,  0x00000d08,     0x4907,                                                            ldrLiteral: Set Reg 1 with value 0x10000254 (from address 0x00000d28), 0x00000d08, 0x00000d0a, 0x10001c00, 0x00001557, 0x21000000, 0x00000000, 0x00000000, 0x02dc6c00 (    48000000), 0x10000254 (   268436052), 0x00000008 (           8), 0x00000001 (           1), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54115,  0x00000d0a,     0x2000,                                                                                    movImmediate: Set Reg 0 with value 0x00000000, 0x00000d0a, 0x00000d0c, 0x10001c00, 0x00001557, 0x61000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x10000254 (   268436052), 0x00000008 (           8), 0x00000001 (           1), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54116,  0x00000d0c, 0xff66f7ff,                                                                                bl: Branch to 0x00000d11 (Link Reg is 0x00000bdc), 0x00000d0c, 0x00000bdc, 0x10001c00, 0x00000d11, 0x61000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x10000254 (   268436052), 0x00000008 (           8), 0x00000001 (           1), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54117,  0x10001bf0, 0x00000001,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001bf0 <-- 0x00000001), 0x00000bdc, 0x00000bde, 0x10001c00, 0x00000d11, 0x61000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x10000254 (   268436052), 0x00000008 (           8), 0x00000001 (           1), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54118,  0x10001bf4, 0x0000185c,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001bf4 <-- 0x0000185c), 0x00000bdc, 0x00000bde, 0x10001c00, 0x00000d11, 0x61000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x10000254 (   268436052), 0x00000008 (           8), 0x00000001 (           1), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54119,  0x10001bf8, 0x00000001,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001bf8 <-- 0x00000001), 0x00000bdc, 0x00000bde, 0x10001c00, 0x00000d11, 0x61000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x10000254 (   268436052), 0x00000008 (           8), 0x00000001 (           1), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54120,  0x10001bfc, 0x00000d11,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001bfc <-- 0x00000d11), 0x00000bdc, 0x00000bde, 0x10001c00, 0x00000d11, 0x61000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x10000254 (   268436052), 0x00000008 (           8), 0x00000001 (           1), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54121,  0x00000bdc,     0xb538,                                                                                                                             push, 0x00000bdc, 0x00000bde, 0x10001bf0, 0x00000d11, 0x61000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x10000254 (   268436052), 0x00000008 (           8), 0x00000001 (           1), 0x0000185c (        6236), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54122,  0x00000bde,     0x460c,                                                                        movRegister: Set Reg 4 with value from Reg 1 (0x10000254), 0x00000bde, 0x00000be0, 0x10001bf0, 0x00000d11, 0x61000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x10000254 (   268436052), 0x00000008 (           8), 0x00000001 (           1), 0x10000254 (   268436052), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54123,  0x00000bf8, 0x10000260,                                                                 alignedMemRead: 128 kB on-chip flash (0x00000bf8 --> 0x10000260), 0x00000be0, 0x00000be2, 0x10001bf0, 0x00000d11, 0x61000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x10000254 (   268436052), 0x00000008 (           8), 0x00000001 (           1), 0x10000254 (   268436052), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54124,  0x00000be0,     0x4905,                                                            ldrLiteral: Set Reg 1 with value 0x10000260 (from address 0x00000bf8), 0x00000be0, 0x00000be2, 0x10001bf0, 0x00000d11, 0x61000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x10000260 (   268436064), 0x00000008 (           8), 0x00000001 (           1), 0x10000254 (   268436052), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54125,  0x00000be2,     0x4613,                                                                        movRegister: Set Reg 3 with value from Reg 2 (0x00000008), 0x00000be2, 0x00000be4, 0x10001bf0, 0x00000d11, 0x61000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x10000260 (   268436064), 0x00000008 (           8), 0x00000008 (           8), 0x10000254 (   268436052), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54126,  0x10000260, 0x02dc6c00,                                                                           alignedMemRead: 8 kB SRAM0 (0x10000260 --> 0x02dc6c00), 0x00000be4, 0x00000be6, 0x10001bf0, 0x00000d11, 0x61000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x10000260 (   268436064), 0x00000008 (           8), 0x00000008 (           8), 0x10000254 (   268436052), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54127,  0x00000be4,     0x6809,                                                        ldrImmediateT1: Set Reg 1 with value 0x02dc6c00 (from address 0x10000260), 0x00000be4, 0x00000be6, 0x10001bf0, 0x00000d11, 0x61000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x00000008 (           8), 0x00000008 (           8), 0x10000254 (   268436052), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54128,  0x00000be6,     0x4622,                                                                        movRegister: Set Reg 2 with value from Reg 4 (0x10000254), 0x00000be6, 0x00000be8, 0x10001bf0, 0x00000d11, 0x61000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x02dc6c00 (    48000000), 0x10000254 (   268436052), 0x00000008 (           8), 0x10000254 (   268436052), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54129,  0x00000be8,     0x0a89,  lsrImmediate: Set Reg 1 to Reg 1 (0x02dc6c00) shifted by 10 to right (shiftResults.result = 0x0000b71b, shiftResults.carryOut =, 0x00000be8, 0x00000bea, 0x10001bf0, 0x00000d11, 0x01000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x0000b71b (       46875), 0x10000254 (   268436052), 0x00000008 (           8), 0x10000254 (   268436052), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54130,  0x10001bf0, 0x0000b71b,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001bf0 <-- 0x0000b71b), 0x00000bea, 0x00000bec, 0x10001bf0, 0x00000d11, 0x01000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x0000b71b (       46875), 0x10000254 (   268436052), 0x00000008 (           8), 0x10000254 (   268436052), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54131,  0x00000bea,     0x9100,                                                                  strImmediateT2: Write value of Reg 1 (0x0000b71b) to 0x10001bf0, 0x00000bea, 0x00000bec, 0x10001bf0, 0x00000d11, 0x01000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x0000b71b (       46875), 0x10000254 (   268436052), 0x00000008 (           8), 0x10000254 (   268436052), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54132,  0x00000bec,     0x4601,                                                                        movRegister: Set Reg 1 with value from Reg 0 (0x00000000), 0x00000bec, 0x00000bee, 0x10001bf0, 0x00000d11, 0x01000000, 0x00000000, 0x00000000, 0x00000000 (           0), 0x00000000 (           0), 0x10000254 (   268436052), 0x00000008 (           8), 0x10000254 (   268436052), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54133,  0x00000bee,     0x203e,                                                                                    movImmediate: Set Reg 0 with value 0x0000003e, 0x00000bee, 0x00000bf0, 0x10001bf0, 0x00000d11, 0x01000000, 0x00000000, 0x00000000, 0x0000003e (          62), 0x00000000 (           0), 0x10000254 (   268436052), 0x00000008 (           8), 0x10000254 (   268436052), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54134,  0x00000bf0, 0xffe0f7ff,                                                                                bl: Branch to 0x00000bf5 (Link Reg is 0x00000bb4), 0x00000bf0, 0x00000bb4, 0x10001bf0, 0x00000bf5, 0x01000000, 0x00000000, 0x00000000, 0x0000003e (          62), 0x00000000 (           0), 0x10000254 (   268436052), 0x00000008 (           8), 0x10000254 (   268436052), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54135,  0x10001be8, 0x10000254,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001be8 <-- 0x10000254), 0x00000bb4, 0x00000bb6, 0x10001bf0, 0x00000bf5, 0x01000000, 0x00000000, 0x00000000, 0x0000003e (          62), 0x00000000 (           0), 0x10000254 (   268436052), 0x00000008 (           8), 0x10000254 (   268436052), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54136,  0x10001bec, 0x00000bf5,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001bec <-- 0x00000bf5), 0x00000bb4, 0x00000bb6, 0x10001bf0, 0x00000bf5, 0x01000000, 0x00000000, 0x00000000, 0x0000003e (          62), 0x00000000 (           0), 0x10000254 (   268436052), 0x00000008 (           8), 0x10000254 (   268436052), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54137,  0x00000bb4,     0xb510,                                                                                                                             push, 0x00000bb4, 0x00000bb6, 0x10001be8, 0x00000bf5, 0x01000000, 0x00000000, 0x00000000, 0x0000003e (          62), 0x00000000 (           0), 0x10000254 (   268436052), 0x00000008 (           8), 0x10000254 (   268436052), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54138,  0x00000bb6,     0xb08a,                                                                                                                            subSP, 0x00000bb6, 0x00000bb8, 0x10001bc0, 0x00000bf5, 0x01000000, 0x00000000, 0x00000000, 0x0000003e (          62), 0x00000000 (           0), 0x10000254 (   268436052), 0x00000008 (           8), 0x10000254 (   268436052), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54139,  0x10001bf0, 0x0000b71b,                                                                           alignedMemRead: 8 kB SRAM0 (0x10001bf0 --> 0x0000b71b), 0x00000bb8, 0x00000bba, 0x10001bc0, 0x00000bf5, 0x01000000, 0x00000000, 0x00000000, 0x0000003e (          62), 0x00000000 (           0), 0x10000254 (   268436052), 0x00000008 (           8), 0x10000254 (   268436052), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54140,  0x00000bb8,     0x9c0c,                                                        ldrImmediateT2: Set Reg 4 with value 0x0000b71b (from address 0x10001bf0), 0x00000bb8, 0x00000bba, 0x10001bc0, 0x00000bf5, 0x01000000, 0x00000000, 0x00000000, 0x0000003e (          62), 0x00000000 (           0), 0x10000254 (   268436052), 0x00000008 (           8), 0x0000b71b (       46875), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54141,  0x10001bd0, 0x0000b71b,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001bd0 <-- 0x0000b71b), 0x00000bba, 0x00000bbc, 0x10001bc0, 0x00000bf5, 0x01000000, 0x00000000, 0x00000000, 0x0000003e (          62), 0x00000000 (           0), 0x10000254 (   268436052), 0x00000008 (           8), 0x0000b71b (       46875), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54142,  0x00000bba,     0x9404,                                                                  strImmediateT2: Write value of Reg 4 (0x0000b71b) to 0x10001bd0, 0x00000bba, 0x00000bbc, 0x10001bc0, 0x00000bf5, 0x01000000, 0x00000000, 0x00000000, 0x0000003e (          62), 0x00000000 (           0), 0x10000254 (   268436052), 0x00000008 (           8), 0x0000b71b (       46875), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54143,  0x00000bbc,     0x466c,                                                                       movRegister: Set Reg 4 with value from Reg 13 (0x10001bc0), 0x00000bbc, 0x00000bbe, 0x10001bc0, 0x00000bf5, 0x01000000, 0x00000000, 0x00000000, 0x0000003e (          62), 0x00000000 (           0), 0x10000254 (   268436052), 0x00000008 (           8), 0x10001bc0 (   268442560), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54144,  0x10001bc0, 0x0000003e,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001bc0 <-- 0x0000003e), 0x00000bbe, 0x00000bc0, 0x10001bc0, 0x00000bf5, 0x01000000, 0x00000000, 0x00000000, 0x0000003e (          62), 0x00000000 (           0), 0x10000254 (   268436052), 0x00000008 (           8), 0x10001bc0 (   268442560), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54145,  0x10001bc4, 0x00000000,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001bc4 <-- 0x00000000), 0x00000bbe, 0x00000bc0, 0x10001bc0, 0x00000bf5, 0x01000000, 0x00000000, 0x00000000, 0x0000003e (          62), 0x00000000 (           0), 0x10000254 (   268436052), 0x00000008 (           8), 0x10001bc0 (   268442560), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54146,  0x10001bc8, 0x10000254,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001bc8 <-- 0x10000254), 0x00000bbe, 0x00000bc0, 0x10001bc0, 0x00000bf5, 0x01000000, 0x00000000, 0x00000000, 0x0000003e (          62), 0x00000000 (           0), 0x10000254 (   268436052), 0x00000008 (           8), 0x10001bc0 (   268442560), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54147,  0x10001bcc, 0x00000008,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10001bcc <-- 0x00000008), 0x00000bbe, 0x00000bc0, 0x10001bc0, 0x00000bf5, 0x01000000, 0x00000000, 0x00000000, 0x0000003e (          62), 0x00000000 (           0), 0x10000254 (   268436052), 0x00000008 (           8), 0x10001bc0 (   268442560), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54148,  0x00000bbe,     0xc40f,                     stm: Start address is Reg 4 (0x10001bd0). fields.registers = 0x0f (for values written into mem). Reg 4 += 16, 0x00000bbe, 0x00000bc0, 0x10001bc0, 0x00000bf5, 0x01000000, 0x00000000, 0x00000000, 0x0000003e (          62), 0x00000000 (           0), 0x10000254 (   268436052), 0x00000008 (           8), 0x10001bd0 (   268442576), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54149,  0x00000bc0, 0xfdf6f7ff,                                                                                bl: Branch to 0x00000bc5 (Link Reg is 0x000007b0), 0x00000bc0, 0x000007b0, 0x10001bc0, 0x00000bc5, 0x01000000, 0x00000000, 0x00000000, 0x0000003e (          62), 0x00000000 (           0), 0x10000254 (   268436052), 0x00000008 (           8), 0x10001bd0 (   268442576), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54150,  0x000007b0,     0xb672,                                                                                                                              cps, 0x000007b0, 0x000007b2, 0x10001bc0, 0x00000bc5, 0x01000000, 0x00000001, 0x00000000, 0x0000003e (          62), 0x00000000 (           0), 0x10000254 (   268436052), 0x00000008 (           8), 0x10001bd0 (   268442576), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54151,  0x000007bc, 0x10000250,                                                                 alignedMemRead: 128 kB on-chip flash (0x000007bc --> 0x10000250), 0x000007b2, 0x000007b4, 0x10001bc0, 0x00000bc5, 0x01000000, 0x00000001, 0x00000000, 0x0000003e (          62), 0x00000000 (           0), 0x10000254 (   268436052), 0x00000008 (           8), 0x10001bd0 (   268442576), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54152,  0x000007b2,     0x4802,                                                            ldrLiteral: Set Reg 0 with value 0x10000250 (from address 0x000007bc), 0x000007b2, 0x000007b4, 0x10001bc0, 0x00000bc5, 0x01000000, 0x00000001, 0x00000000, 0x10000250 (   268436048), 0x00000000 (           0), 0x10000254 (   268436052), 0x00000008 (           8), 0x10001bd0 (   268442576), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54153,  0x10000250, 0x00000000,                                                                           alignedMemRead: 8 kB SRAM0 (0x10000250 --> 0x00000000), 0x000007b4, 0x000007b6, 0x10001bc0, 0x00000bc5, 0x01000000, 0x00000001, 0x00000000, 0x10000250 (   268436048), 0x00000000 (           0), 0x10000254 (   268436052), 0x00000008 (           8), 0x10001bd0 (   268442576), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54154,  0x000007b4,     0x6801,                                                        ldrImmediateT1: Set Reg 1 with value 0x00000000 (from address 0x10000250), 0x000007b4, 0x000007b6, 0x10001bc0, 0x00000bc5, 0x01000000, 0x00000001, 0x00000000, 0x10000250 (   268436048), 0x00000000 (           0), 0x10000254 (   268436052), 0x00000008 (           8), 0x10001bd0 (   268442576), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54155,  0x000007b6,     0x1c49,                                                                  addImmediateT1: Adding Reg 1 (0x00000000) with value 0x00000001, 0x000007b6, 0x000007b8, 0x10001bc0, 0x00000bc5, 0x01000000, 0x00000001, 0x00000000, 0x10000250 (   268436048), 0x00000001 (           1), 0x10000254 (   268436052), 0x00000008 (           8), 0x10001bd0 (   268442576), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54156,  0x10000250, 0x00000001,                                                                          alignedMemWrite: 8 kB SRAM0 (0x10000250 <-- 0x00000001), 0x000007b8, 0x000007ba, 0x10001bc0, 0x00000bc5, 0x01000000, 0x00000001, 0x00000000, 0x10000250 (   268436048), 0x00000001 (           1), 0x10000254 (   268436052), 0x00000008 (           8), 0x10001bd0 (   268442576), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54157,  0x000007b8,     0x6001,                        strImmediateT1: Write value of Reg 1 (0x00000001) to address 0x10000250 (Reg 0 (0x10000250) + 0x00000000), 0x000007b8, 0x000007ba, 0x10001bc0, 0x00000bc5, 0x01000000, 0x00000001, 0x00000000, 0x10000250 (   268436048), 0x00000001 (           1), 0x10000254 (   268436052), 0x00000008 (           8), 0x10001bd0 (   268442576), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54158,  0x000007ba,     0x4770,                                                                                                         bx: Branch to 0x00000bc5, 0x000007ba, 0x00000bc4, 0x10001bc0, 0x00000bc5, 0x01000000, 0x00000001, 0x00000000, 0x10000250 (   268436048), 0x00000001 (           1), 0x10000254 (   268436052), 0x00000008 (           8), 0x10001bd0 (   268442576), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54159,  0x00000bd8, 0x1fff1ff1,                                                                 alignedMemRead: 128 kB on-chip flash (0x00000bd8 --> 0x1fff1ff1), 0x00000bc4, 0x00000bc6, 0x10001bc0, 0x00000bc5, 0x01000000, 0x00000001, 0x00000000, 0x10000250 (   268436048), 0x00000001 (           1), 0x10000254 (   268436052), 0x00000008 (           8), 0x10001bd0 (   268442576), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54160,  0x00000bc4,     0x4a04,                                                            ldrLiteral: Set Reg 2 with value 0x1fff1ff1 (from address 0x00000bd8), 0x00000bc4, 0x00000bc6, 0x10001bc0, 0x00000bc5, 0x01000000, 0x00000001, 0x00000000, 0x10000250 (   268436048), 0x00000001 (           1), 0x1fff1ff1 (   536813553), 0x00000008 (           8), 0x10001bd0 (   268442576), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54161,  0x00000bc6,     0x4668,                                                                       movRegister: Set Reg 0 with value from Reg 13 (0x10001bc0), 0x00000bc6, 0x00000bc8, 0x10001bc0, 0x00000bc5, 0x01000000, 0x00000001, 0x00000000, 0x10001bc0 (   268442560), 0x00000001 (           1), 0x1fff1ff1 (   536813553), 0x00000008 (           8), 0x10001bd0 (   268442576), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
     54162,  0x00000bc8,     0xa905,                                                                                                                          addSPT1, 0x00000bc8, 0x00000bca, 0x10001bc0, 0x00000bc5, 0x01000000, 0x00000001, 0x00000000, 0x10001bc0 (   268442560), 0x10001bd4 (   268442580), 0x1fff1ff1 (   536813553), 0x00000008 (           8), 0x10001bd0 (   268442576), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 

     54163,  0x00000bca,     0x4790,                                                                                  blx: Set PC to 0x1fff1ff1. Set LR to 0x00000bcc, 0x00000bca, 0x1fff1ff0, 0x10001bc0, 0x00000bcd, 0x01000000, 0x00000001, 0x00000000, 0x10001bc0 (   268442560), 0x10001bd4 (   268442580), 0x1fff1ff1 (   536813553), 0x00000008 (           8), 0x10001bd0 (   268442576), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 

     54164,  0x1fff1ff0,     0x0000,  lslImmediate: Set Reg 0 to Reg 0 (0x10001bc0) shifted by 0 to left (shiftResults.result = 0x10001bc0, shiftResults.carryOut = 0, 0x1fff1ff0, 0x1fff1ff2, 0x10001bc0, 0x00000bcd, 0x01000000, 0x00000001, 0x00000000, 0x10001bc0 (   268442560), 0x10001bd4 (   268442580), 0x1fff1ff1 (   536813553), 0x00000008 (           8), 0x10001bd0 (   268442576), 0x00000001 (           1), 0x0000185c (        6236), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 0x00000000 (           0), 
